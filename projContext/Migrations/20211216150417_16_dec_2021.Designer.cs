// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projContext;

namespace projContext.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211216150417_16_dec_2021")]
    partial class _16_dec_2021
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("projContext.DB.EmployeeBasicDataProc", b =>
                {
                    b.Property<int>("employee_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("company_id");

                    b.Property<string>("company_name");

                    b.Property<int>("dept_id");

                    b.Property<string>("dept_name");

                    b.Property<string>("desig_name");

                    b.Property<string>("doanv");

                    b.Property<string>("dob");

                    b.Property<string>("email");

                    b.Property<string>("emp_code");

                    b.Property<string>("emp_img");

                    b.Property<string>("emp_name");

                    b.Property<int>("emp_status");

                    b.Property<int>("isActive");

                    b.Property<int>("location_id");

                    b.Property<string>("location_name");

                    b.Property<string>("mobileno");

                    b.Property<int>("state_id");

                    b.Property<string>("state_name");

                    b.Property<int>("user_id");

                    b.HasKey("employee_id");

                    b.ToTable("EmployeeBasicDataProc");
                });

            modelBuilder.Entity("projContext.DB.MLM.tblDistributorAddress", b =>
                {
                    b.Property<ulong>("Sno")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(128);

                    b.Property<int>("CityId");

                    b.Property<int>("CountryId");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDelfault");

                    b.Property<string>("Latitude")
                        .HasMaxLength(64);

                    b.Property<int>("LocationId");

                    b.Property<string>("Longitude")
                        .HasMaxLength(64);

                    b.Property<ulong>("Nid");

                    b.Property<int>("StateId");

                    b.HasKey("Sno");

                    b.ToTable("tblDistributorAddress");
                });

            modelBuilder.Entity("projContext.DB.MLM.tblDistributorBanks", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(32);

                    b.Property<int>("BankId");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(32);

                    b.Property<ulong>("CreatedBy");

                    b.Property<DateTime>("CreatedDt");

                    b.Property<string>("FilePath")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDefault");

                    b.Property<bool>("IsDeleted");

                    b.Property<ulong?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDt");

                    b.Property<string>("ModifyRemarks")
                        .HasMaxLength(128);

                    b.Property<ulong>("Nid");

                    b.Property<string>("UPICode")
                        .HasMaxLength(64);

                    b.HasKey("sno");

                    b.ToTable("tblDistributorBanks");
                });

            modelBuilder.Entity("projContext.DB.MLM.tblDistributorCultureInfo", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("CreatedBy");

                    b.Property<DateTime>("CreatedDt");

                    b.Property<string>("CultureInfo")
                        .HasMaxLength(8);

                    b.Property<bool>("IsDefault");

                    b.Property<bool>("IsDeleted");

                    b.Property<ulong?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDt");

                    b.Property<string>("ModifyRemarks")
                        .HasMaxLength(128);

                    b.Property<ulong>("Nid");

                    b.HasKey("sno");

                    b.ToTable("tblDistributorCultureInfo");
                });

            modelBuilder.Entity("projContext.DB.MLM.tblDistributorCurrency", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("CreatedBy");

                    b.Property<DateTime>("CreatedDt");

                    b.Property<int>("CurrencyId");

                    b.Property<bool>("IsDefault");

                    b.Property<bool>("IsDeleted");

                    b.Property<ulong?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDt");

                    b.Property<string>("ModifyRemarks")
                        .HasMaxLength(128);

                    b.Property<ulong>("Nid");

                    b.HasKey("sno");

                    b.ToTable("tblDistributorCurrency");
                });

            modelBuilder.Entity("projContext.DB.MLM.tblDistributorKycStatus", b =>
                {
                    b.Property<ulong>("Sno")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("IsBankConfirmed");

                    b.Property<byte>("IsEmailConfirmed");

                    b.Property<byte>("IsIdentityConfirmed");

                    b.Property<byte>("IsNomineeConfirmed");

                    b.Property<byte>("IsPanConfirmed");

                    b.Property<byte>("IsPhoneConfirmed");

                    b.Property<DateTime>("ModifiedDt");

                    b.Property<ulong>("Nid");

                    b.Property<int>("Status");

                    b.HasKey("Sno");

                    b.ToTable("tblDistributorKycStatus");
                });

            modelBuilder.Entity("projContext.DB.MLM.tblDistributorMaster", b =>
                {
                    b.Property<ulong>("Nid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DOB");

                    b.Property<DateTime>("DOJ");

                    b.Property<int>("DepthId");

                    b.Property<string>("FirstName")
                        .HasMaxLength(32);

                    b.Property<bool>("IsTerminate");

                    b.Property<int>("JoiningCountryId");

                    b.Property<string>("LastName")
                        .HasMaxLength(32);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(32);

                    b.Property<ulong>("SponsorNid");

                    b.Property<DateTime>("TerminatedDt");

                    b.Property<int>("WidthId");

                    b.HasKey("Nid");

                    b.ToTable("tblDistributorMaster");
                });

            modelBuilder.Entity("projContext.DB.MLM.tblDistributorPan", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("CreatedBy");

                    b.Property<DateTime>("CreatedDt");

                    b.Property<string>("FilePath")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<ulong?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDt");

                    b.Property<string>("ModifyRemarks")
                        .HasMaxLength(128);

                    b.Property<string>("NameOnPan")
                        .HasMaxLength(128);

                    b.Property<ulong>("Nid");

                    b.Property<string>("PanNo")
                        .HasMaxLength(32);

                    b.HasKey("sno");

                    b.ToTable("tblDistributorPan");
                });

            modelBuilder.Entity("projContext.DB.MLM.tblDistributorTree", b =>
                {
                    b.Property<ulong>("Sno")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("Nid");

                    b.Property<ulong>("SpNid");

                    b.HasKey("Sno");

                    b.ToTable("tblDistributorTree");
                });

            modelBuilder.Entity("projContext.DB.MLM.tblIdentityProof", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("CreatedBy");

                    b.Property<DateTime>("CreatedDt");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(32);

                    b.Property<string>("FilePath")
                        .HasMaxLength(128);

                    b.Property<int>("IdentityType");

                    b.Property<bool>("IsDeleted");

                    b.Property<ulong?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDt");

                    b.Property<string>("ModifyRemarks")
                        .HasMaxLength(128);

                    b.Property<string>("NameOnDocument")
                        .HasMaxLength(128);

                    b.Property<ulong>("Nid");

                    b.HasKey("sno");

                    b.ToTable("tblIdentityProof");
                });

            modelBuilder.Entity("projContext.DB.log_tbl_salary_input", b =>
                {
                    b.Property<int>("log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("component_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<int>("is_active");

                    b.Property<int>("log_created_by");

                    b.Property<DateTime>("log_created_date");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<string>("monthyear");

                    b.Property<int>("salary_input_id");

                    b.Property<int>("values");

                    b.HasKey("log_id");

                    b.HasIndex("component_id");

                    b.HasIndex("emp_id");

                    b.ToTable("log_tbl_salary_input");
                });

            modelBuilder.Entity("projContext.DB.mdlSalaryInputValues", b =>
                {
                    b.Property<int>("compId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("arrear_value");

                    b.Property<string>("compName");

                    b.Property<string>("compValue");

                    b.Property<int>("component_type");

                    b.Property<double>("current_month_value");

                    b.Property<double>("rate");

                    b.HasKey("compId");

                    b.ToTable("mdlSalaryInputValues");
                });

            modelBuilder.Entity("projContext.DB.tblCustomerOrganisation", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("CreatedBy");

                    b.Property<DateTime>("CreatedDt");

                    b.Property<int>("CustomerType");

                    b.Property<DateTime>("EffectiveFromDt");

                    b.Property<DateTime>("EffectiveToDt");

                    b.Property<string>("Email")
                        .HasMaxLength(128);

                    b.Property<bool>("IsActive");

                    b.Property<ulong?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDt");

                    b.Property<string>("ModifyRemarks")
                        .HasMaxLength(128);

                    b.Property<string>("OrgLogo")
                        .HasMaxLength(128);

                    b.Property<string>("OrganisationCode")
                        .HasMaxLength(32);

                    b.Property<string>("OrganisationName")
                        .HasMaxLength(256);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(32);

                    b.HasKey("CustomerId");

                    b.ToTable("tblCustomerOrganisation");
                });

            modelBuilder.Entity("projContext.DB.tblDependentProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DependentProcessId");

                    b.Property<bool>("IsActive");

                    b.Property<int>("ProcessId");

                    b.HasKey("Id");

                    b.ToTable("tblDependentProcess");
                });

            modelBuilder.Entity("projContext.DB.tblProcessExecution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MonthYear");

                    b.Property<int>("ProcessId");

                    b.Property<byte>("ProcessStatus");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.HasKey("Id");

                    b.ToTable("tblProcessExecution");
                });

            modelBuilder.Entity("projContext.DB.tblProcessMaster", b =>
                {
                    b.Property<int>("ProcessId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicationId");

                    b.Property<int>("DisplayOrder");

                    b.Property<bool>("IsActive");

                    b.Property<int>("ModuleId");

                    b.Property<string>("ProcessName")
                        .HasMaxLength(64);

                    b.HasKey("ProcessId");

                    b.ToTable("tblProcessMaster");
                });

            modelBuilder.Entity("projContext.DB.tblUserLoginLog", b =>
                {
                    b.Property<ulong>("Sno")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DeviceDetails")
                        .HasMaxLength(256);

                    b.Property<string>("FromLocation")
                        .HasMaxLength(128);

                    b.Property<string>("IPAddress")
                        .HasMaxLength(256);

                    b.Property<string>("Latitude")
                        .HasMaxLength(128);

                    b.Property<DateTime>("LoginDateTime");

                    b.Property<bool>("LoginStatus")
                        .HasMaxLength(128);

                    b.Property<string>("Longitude")
                        .HasMaxLength(128);

                    b.Property<ulong>("user_id");

                    b.HasKey("Sno");

                    b.ToTable("tblUserLoginLog");
                });

            modelBuilder.Entity("projContext.DB.tblUserOTPValidation", b =>
                {
                    b.Property<string>("SecurityStamp")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256);

                    b.Property<DateTime>("EffectiveFromDt");

                    b.Property<DateTime>("EffectiveToDt");

                    b.Property<string>("SecurityStampValue")
                        .HasMaxLength(32);

                    b.Property<ulong>("Sno");

                    b.Property<string>("TempUserId")
                        .HasMaxLength(256);

                    b.Property<ulong>("UserId");

                    b.HasKey("SecurityStamp");

                    b.ToTable("tblUserOTPValidation");
                });

            modelBuilder.Entity("projContext.DB.tblUserProfilePhoto", b =>
                {
                    b.Property<ulong>("Sno")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("CreatedBy");

                    b.Property<DateTime>("CreatedDt");

                    b.Property<string>("FileName")
                        .HasMaxLength(128);

                    b.Property<bool>("IsActive");

                    b.Property<ulong?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDt");

                    b.Property<string>("ModifyRemarks")
                        .HasMaxLength(128);

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(256);

                    b.Property<ulong>("user_id");

                    b.HasKey("Sno");

                    b.ToTable("tblUserProfilePhoto");
                });

            modelBuilder.Entity("projContext.DB.tblUsersApplication", b =>
                {
                    b.Property<ulong>("Sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Applications");

                    b.Property<ulong>("CreatedBy");

                    b.Property<DateTime>("CreatedDt");

                    b.Property<bool>("IsActive");

                    b.Property<ulong?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDt");

                    b.Property<string>("ModifyRemarks")
                        .HasMaxLength(128);

                    b.Property<ulong>("UserId");

                    b.HasKey("Sno");

                    b.ToTable("tblUsersApplication");
                });

            modelBuilder.Entity("projContext.DB.tbl_app_setting", b =>
                {
                    b.Property<int>("pkid_setting")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppSettingKey")
                        .HasMaxLength(64);

                    b.Property<string>("AppSettingValue")
                        .HasMaxLength(2048);

                    b.Property<string>("GroupName")
                        .HasMaxLength(64);

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("pkid_setting");

                    b.ToTable("tbl_app_setting");
                });

            modelBuilder.Entity("projContext.DB.tbl_approved_emp_separation_cancellation", b =>
                {
                    b.Property<int>("pkid_AppEmpSepCancel")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("admin_dt");

                    b.Property<int?>("admin_id");

                    b.Property<string>("admin_remarks");

                    b.Property<DateTime>("app1_dt");

                    b.Property<string>("app1_remarks");

                    b.Property<DateTime>("app2_dt");

                    b.Property<string>("app2_remarks");

                    b.Property<DateTime>("app3_dt");

                    b.Property<string>("app3_remarks");

                    b.Property<int?>("approver1_id");

                    b.Property<int?>("approver2_id");

                    b.Property<int?>("apprver3_id");

                    b.Property<string>("cancel_remarks");

                    b.Property<DateTime>("cancellation_dt");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("fkid_empSepration");

                    b.Property<int>("is_admin_approved");

                    b.Property<int>("is_approved1");

                    b.Property<int>("is_approved2");

                    b.Property<int>("is_approved3");

                    b.Property<int>("is_deleted");

                    b.Property<int>("is_final_approve");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.HasKey("pkid_AppEmpSepCancel");

                    b.HasIndex("admin_id");

                    b.HasIndex("approver1_id");

                    b.HasIndex("approver2_id");

                    b.HasIndex("apprver3_id");

                    b.HasIndex("fkid_empSepration");

                    b.ToTable("tbl_approved_emp_separation_cancellation");
                });

            modelBuilder.Entity("projContext.DB.tbl_assets_approval", b =>
                {
                    b.Property<int>("asset_approval_sno")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("approval_order");

                    b.Property<int?>("approver_role_id");

                    b.Property<int?>("asset_req_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<byte>("is_approve");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_final_approver");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("asset_approval_sno");

                    b.HasIndex("asset_req_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_assets_approval");
                });

            modelBuilder.Entity("projContext.DB.tbl_assets_master", b =>
                {
                    b.Property<int>("asset_master_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("asset_name")
                        .HasMaxLength(50);

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<string>("description")
                        .HasMaxLength(50);

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<string>("short_name")
                        .HasMaxLength(50);

                    b.HasKey("asset_master_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_assets_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_assets_request_master", b =>
                {
                    b.Property<int>("asset_req_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("asset_issue_date");

                    b.Property<string>("asset_name")
                        .HasMaxLength(200);

                    b.Property<string>("asset_number")
                        .HasMaxLength(200);

                    b.Property<byte>("asset_type");

                    b.Property<int?>("assets_master_id");

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<DateTime>("from_date");

                    b.Property<int>("is_active");

                    b.Property<byte>("is_closed");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("is_finalapprove");

                    b.Property<byte>("is_permanent");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<DateTime>("replace_dt");

                    b.Property<int>("req_employee_id");

                    b.Property<DateTime>("submission_date");

                    b.Property<DateTime>("to_date");

                    b.HasKey("asset_req_id");

                    b.HasIndex("assets_master_id");

                    b.HasIndex("req_employee_id");

                    b.ToTable("tbl_assets_request_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_attendace_request", b =>
                {
                    b.Property<int>("leave_request_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("a1_e_id");

                    b.Property<int?>("a2_e_id");

                    b.Property<int?>("a3_e_id");

                    b.Property<DateTime>("admin_ar_date");

                    b.Property<int?>("admin_id");

                    b.Property<string>("admin_remarks");

                    b.Property<string>("approval1_remarks")
                        .HasMaxLength(200);

                    b.Property<string>("approval2_remarks")
                        .HasMaxLength(200);

                    b.Property<string>("approval3_remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("approval_date1");

                    b.Property<DateTime>("approval_date2");

                    b.Property<DateTime>("approval_date3");

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("deleted_by");

                    b.Property<DateTime>("deleted_dt");

                    b.Property<string>("deleted_remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("from_date");

                    b.Property<int>("is_admin_approve");

                    b.Property<byte>("is_approved1");

                    b.Property<byte>("is_approved2");

                    b.Property<byte>("is_approved3");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_final_approve");

                    b.Property<DateTime>("manual_in_time");

                    b.Property<DateTime>("manual_out_time");

                    b.Property<int?>("r_e_id");

                    b.Property<DateTime>("requester_date");

                    b.Property<string>("requester_remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("system_in_time");

                    b.Property<DateTime>("system_out_time");

                    b.HasKey("leave_request_id");

                    b.HasIndex("a1_e_id");

                    b.HasIndex("a2_e_id");

                    b.HasIndex("a3_e_id");

                    b.HasIndex("admin_id");

                    b.HasIndex("company_id");

                    b.HasIndex("r_e_id");

                    b.ToTable("tbl_attendace_request");
                });

            modelBuilder.Entity("projContext.DB.tbl_attendance_details", b =>
                {
                    b.Property<int>("attendance_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("emp_id");

                    b.Property<byte>("enter_by_interface");

                    b.Property<DateTime>("entry_time");

                    b.Property<int?>("machine_id");

                    b.Property<DateTime>("punch_time");

                    b.HasKey("attendance_id");

                    b.HasIndex("emp_id");

                    b.HasIndex("machine_id");

                    b.ToTable("tbl_attendance_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_attendance_details_log", b =>
                {
                    b.Property<int>("attendance_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("a_id");

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("e_id");

                    b.Property<byte>("enter_by_interface");

                    b.Property<DateTime>("entry_time");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("machine_id");

                    b.Property<DateTime>("punch_time");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("attendance_log_id");

                    b.HasIndex("a_id");

                    b.HasIndex("e_id");

                    b.HasIndex("machine_id");

                    b.ToTable("tbl_attendance_details_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_attendance_details_manual", b =>
                {
                    b.Property<int>("attendance_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("attendance_dt");

                    b.Property<byte?>("day_status");

                    b.Property<int?>("emp_id");

                    b.Property<DateTime>("entry_date");

                    b.Property<DateTime?>("start_in");

                    b.Property<DateTime?>("start_out");

                    b.Property<int>("user_id");

                    b.HasKey("attendance_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_attendance_details_manual");
                });

            modelBuilder.Entity("projContext.DB.tbl_attendance_summary", b =>
                {
                    b.Property<int?>("emp_id");

                    b.Property<int>("Monthyear");

                    b.Property<double>("Absent");

                    b.Property<double>("FinalAbsent");

                    b.Property<double>("FinalHoliday");

                    b.Property<double>("FinalLeave");

                    b.Property<double>("FinalPaidDay");

                    b.Property<double>("FinalPresent");

                    b.Property<double>("FinalWeekOff");

                    b.Property<double>("Holiday");

                    b.Property<double>("Leave");

                    b.Property<double>("PaidDay");

                    b.Property<double>("Present");

                    b.Property<double>("TotalDay");

                    b.Property<double>("WeekOff");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.HasKey("emp_id", "Monthyear");

                    b.ToTable("tbl_attendance_summary");
                });

            modelBuilder.Entity("projContext.DB.tbl_bank_master", b =>
                {
                    b.Property<int>("bank_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("bank_name")
                        .HasMaxLength(100);

                    b.Property<int>("bank_status");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("deleted_by");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.HasKey("bank_id");

                    b.ToTable("tbl_bank_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_city", b =>
                {
                    b.Property<int>("city_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("name")
                        .HasMaxLength(200);

                    b.Property<string>("pincode");

                    b.Property<int?>("state_id");

                    b.HasKey("city_id");

                    b.HasIndex("state_id");

                    b.ToTable("tbl_city");
                });

            modelBuilder.Entity("projContext.DB.tbl_comb_off_log", b =>
                {
                    b.Property<int>("comp_off_rule_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("comp_off_id");

                    b.Property<byte>("is_approved");

                    b.Property<int>("minimum_working_hours")
                        .HasMaxLength(200);

                    b.Property<int>("minimum_working_minute");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("comp_off_rule_log_id");

                    b.HasIndex("comp_off_id");

                    b.ToTable("tbl_comb_off_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_comb_off_rule_master", b =>
                {
                    b.Property<int>("comp_off_rule_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int>("minimum_working_hours")
                        .HasMaxLength(200);

                    b.Property<int>("minimum_working_minute");

                    b.HasKey("comp_off_rule_id");

                    b.ToTable("tbl_comb_off_rule_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_comp_off_ledger", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("compoff_date");

                    b.Property<double>("credit");

                    b.Property<int>("deleted_by");

                    b.Property<double>("dredit");

                    b.Property<int?>("e_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("monthyear");

                    b.Property<string>("remarks");

                    b.Property<DateTime>("transaction_date");

                    b.Property<int>("transaction_no");

                    b.Property<byte>("transaction_type");

                    b.HasKey("sno");

                    b.HasIndex("deleted_by");

                    b.HasIndex("e_id");

                    b.ToTable("tbl_comp_off_ledger");
                });

            modelBuilder.Entity("projContext.DB.tbl_comp_off_ledger_log", b =>
                {
                    b.Property<int>("log_sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<DateTime>("compoff_date");

                    b.Property<double>("credit");

                    b.Property<double>("dredit");

                    b.Property<int?>("e_id");

                    b.Property<byte>("is_approved");

                    b.Property<int>("monthyear");

                    b.Property<string>("remarks");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<int?>("sno");

                    b.Property<DateTime>("transaction_date");

                    b.Property<int>("transaction_no");

                    b.Property<byte>("transaction_type");

                    b.HasKey("log_sno");

                    b.HasIndex("e_id");

                    b.HasIndex("sno");

                    b.ToTable("tbl_comp_off_ledger_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_comp_off_request_master", b =>
                {
                    b.Property<int>("comp_off_request_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("a1_e_id");

                    b.Property<int?>("a2_e_id");

                    b.Property<int?>("a3_e_id");

                    b.Property<DateTime>("admin_ar_date");

                    b.Property<int?>("admin_id");

                    b.Property<string>("admin_remarks");

                    b.Property<string>("approval1_remarks")
                        .HasMaxLength(200);

                    b.Property<string>("approval2_remarks")
                        .HasMaxLength(200);

                    b.Property<string>("approval3_remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("approval_date1");

                    b.Property<DateTime>("approval_date2");

                    b.Property<DateTime>("approval_date3");

                    b.Property<int?>("company_id");

                    b.Property<DateTime>("compoff_against_date");

                    b.Property<DateTime>("compoff_date");

                    b.Property<double>("compoff_request_qty");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("deleted_by");

                    b.Property<DateTime>("deleted_dt");

                    b.Property<string>("deleted_remarks")
                        .HasMaxLength(200);

                    b.Property<int>("is_admin_approve");

                    b.Property<byte>("is_approved1");

                    b.Property<byte>("is_approved2");

                    b.Property<byte>("is_approved3");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_final_approve");

                    b.Property<int?>("r_e_id");

                    b.Property<DateTime>("requester_date");

                    b.Property<string>("requester_remarks")
                        .HasMaxLength(200);

                    b.HasKey("comp_off_request_id");

                    b.HasIndex("a1_e_id");

                    b.HasIndex("a2_e_id");

                    b.HasIndex("a3_e_id");

                    b.HasIndex("admin_id");

                    b.HasIndex("company_id");

                    b.HasIndex("r_e_id");

                    b.ToTable("tbl_comp_off_request_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_company_emp_setting", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("current_range");

                    b.Property<int>("from_range");

                    b.Property<byte>("is_active");

                    b.Property<DateTime>("last_genrated");

                    b.Property<int>("number_of_character_for_employee_code");

                    b.Property<string>("prefix_for_employee_code");

                    b.Property<int>("to_range");

                    b.HasKey("sno");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_company_emp_setting");
                });

            modelBuilder.Entity("projContext.DB.tbl_company_master", b =>
                {
                    b.Property<int>("company_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address_line_one")
                        .HasMaxLength(250);

                    b.Property<string>("address_line_two")
                        .HasMaxLength(250);

                    b.Property<int?>("city_id");

                    b.Property<string>("company_code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("company_logo");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("company_website")
                        .HasMaxLength(100);

                    b.Property<int?>("country_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_active");

                    b.Property<byte>("is_emp_code_manual_genrate");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int>("pin_code");

                    b.Property<string>("primary_contact_number")
                        .HasMaxLength(20);

                    b.Property<string>("primary_email_id")
                        .HasMaxLength(50);

                    b.Property<string>("secondary_contact_number")
                        .HasMaxLength(20);

                    b.Property<string>("secondary_email_id")
                        .HasMaxLength(50);

                    b.Property<int?>("state_id");

                    b.Property<int>("total_emp");

                    b.Property<int>("user_type");

                    b.HasKey("company_id");

                    b.HasIndex("city_id");

                    b.HasIndex("country_id");

                    b.HasIndex("state_id");

                    b.ToTable("tbl_company_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_compoff_raise", b =>
                {
                    b.Property<int>("emp_comp_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("a1_e_id");

                    b.Property<int?>("a2_e_id");

                    b.Property<int?>("a3_e_id");

                    b.Property<DateTime>("admin_ar_date");

                    b.Property<int?>("admin_id");

                    b.Property<string>("admin_remarks");

                    b.Property<string>("approval1_remarks")
                        .HasMaxLength(200);

                    b.Property<string>("approval2_remarks")
                        .HasMaxLength(200);

                    b.Property<string>("approval3_remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("approver1_dt");

                    b.Property<DateTime>("approver2_dt");

                    b.Property<DateTime>("approver3_dt");

                    b.Property<DateTime>("comp_off_date");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("deleted_by");

                    b.Property<DateTime>("deleted_dt");

                    b.Property<string>("deleted_remarks")
                        .HasMaxLength(200);

                    b.Property<int?>("emp_id");

                    b.Property<int>("is_admin_approve");

                    b.Property<byte>("is_approved1");

                    b.Property<byte>("is_approved2");

                    b.Property<byte>("is_approved3");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_final_approve");

                    b.Property<string>("requester_remarks")
                        .HasMaxLength(200);

                    b.HasKey("emp_comp_id");

                    b.HasIndex("a1_e_id");

                    b.HasIndex("a2_e_id");

                    b.HasIndex("a3_e_id");

                    b.HasIndex("admin_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_compoff_raise");
                });

            modelBuilder.Entity("projContext.DB.tbl_component_formula_details", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int?>("component_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("deleted_by");

                    b.Property<DateTime>("deleted_dt");

                    b.Property<string>("formula");

                    b.Property<int>("function_calling_order");

                    b.Property<int>("is_deleted");

                    b.Property<int?>("salary_group_id");

                    b.HasKey("sno");

                    b.HasIndex("company_id");

                    b.HasIndex("component_id");

                    b.HasIndex("salary_group_id");

                    b.ToTable("tbl_component_formula_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_component_master", b =>
                {
                    b.Property<int>("component_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("System_function");

                    b.Property<string>("System_table");

                    b.Property<string>("component_name");

                    b.Property<int>("component_type");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<string>("datatype");

                    b.Property<string>("defaultvalue");

                    b.Property<int>("is_active");

                    b.Property<byte>("is_data_entry_comp");

                    b.Property<int>("is_fnf_component");

                    b.Property<byte>("is_payslip");

                    b.Property<byte>("is_salary_comp");

                    b.Property<byte>("is_system_key");

                    b.Property<byte>("is_tds_comp");

                    b.Property<int>("is_user_interface");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int>("parentid");

                    b.Property<int>("payment_type");

                    b.Property<string>("property_details");

                    b.HasKey("component_id");

                    b.ToTable("tbl_component_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_country", b =>
                {
                    b.Property<int>("country_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("name")
                        .HasMaxLength(100);

                    b.Property<string>("sort_name")
                        .HasMaxLength(10);

                    b.HasKey("country_id");

                    b.ToTable("tbl_country");
                });

            modelBuilder.Entity("projContext.DB.tbl_current_openings", b =>
                {
                    b.Property<int>("pkid_current_openings")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("current_status");

                    b.Property<int>("department_id");

                    b.Property<string>("doc_path");

                    b.Property<string>("experience");

                    b.Property<int>("is_active");

                    b.Property<string>("job_description");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<string>("opening_detail");

                    b.Property<DateTime>("posted_date");

                    b.Property<string>("remarks");

                    b.Property<string>("role_responsibility");

                    b.HasKey("pkid_current_openings");

                    b.ToTable("tbl_current_openings");
                });

            modelBuilder.Entity("projContext.DB.tbl_daily_attendance", b =>
                {
                    b.Property<int?>("emp_id");

                    b.Property<DateTime>("attendance_dt");

                    b.Property<byte>("day_status");

                    b.Property<int>("early_or_late_in_hour");

                    b.Property<int>("early_or_late_in_minute");

                    b.Property<int>("early_or_late_out_hour");

                    b.Property<int>("early_or_late_out_minute");

                    b.Property<int?>("emp_offcl_id");

                    b.Property<int>("grace_period_hour");

                    b.Property<int>("grace_period_minute");

                    b.Property<int?>("holiday_id");

                    b.Property<DateTime>("in_time");

                    b.Property<byte>("is_comp_off");

                    b.Property<byte>("is_early_out");

                    b.Property<byte>("is_freezed");

                    b.Property<byte>("is_grace_applied");

                    b.Property<byte>("is_holiday");

                    b.Property<byte>("is_late_in");

                    b.Property<byte>("is_ot_given");

                    b.Property<byte>("is_outdoor");

                    b.Property<byte>("is_regularize");

                    b.Property<byte>("is_weekly_off");

                    b.Property<DateTime>("last_process_dt");

                    b.Property<int?>("leave_request_id");

                    b.Property<byte>("leave_type");

                    b.Property<int>("ot_hour_done");

                    b.Property<int>("ot_minute_done");

                    b.Property<DateTime>("out_time");

                    b.Property<int>("payrollmonthyear");

                    b.Property<int?>("s_d_id");

                    b.Property<int?>("shift_id");

                    b.Property<DateTime>("shift_in_time");

                    b.Property<DateTime>("shift_max_in_time");

                    b.Property<DateTime>("shift_out_time");

                    b.Property<int>("short_leave_hour");

                    b.Property<int>("short_leave_minute");

                    b.Property<int>("w_hour_req_for_full_day");

                    b.Property<int>("w_hour_req_for_half_day");

                    b.Property<int>("w_min_req_for_full_day");

                    b.Property<int>("w_min_req_for_half_day");

                    b.Property<int>("working_hour_done");

                    b.Property<int>("working_minute_done");

                    b.HasKey("emp_id", "attendance_dt");

                    b.HasAlternateKey("attendance_dt", "emp_id");

                    b.HasIndex("emp_offcl_id");

                    b.HasIndex("holiday_id");

                    b.HasIndex("leave_request_id");

                    b.HasIndex("s_d_id");

                    b.HasIndex("shift_id");

                    b.ToTable("tbl_daily_attendance");
                });

            modelBuilder.Entity("projContext.DB.tbl_department_master", b =>
                {
                    b.Property<int>("department_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("department_code")
                        .HasMaxLength(100);

                    b.Property<string>("department_head_employee_code")
                        .HasMaxLength(100);

                    b.Property<string>("department_head_employee_name")
                        .HasMaxLength(200);

                    b.Property<string>("department_name")
                        .HasMaxLength(200);

                    b.Property<string>("department_short_name")
                        .HasMaxLength(100);

                    b.Property<int?>("employee_id");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("department_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_department_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_department_master_log", b =>
                {
                    b.Property<int>("department_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int>("company_id");

                    b.Property<string>("department_code")
                        .HasMaxLength(100);

                    b.Property<string>("department_head_employee_code")
                        .HasMaxLength(100);

                    b.Property<string>("department_head_employee_name")
                        .HasMaxLength(200);

                    b.Property<int?>("department_id");

                    b.Property<string>("department_name")
                        .HasMaxLength(200);

                    b.Property<string>("department_short_name")
                        .HasMaxLength(100);

                    b.Property<byte>("is_approved");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("department_log_id");

                    b.HasIndex("department_id");

                    b.ToTable("tbl_department_master_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_designation_log", b =>
                {
                    b.Property<int>("designation_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("desig_id");

                    b.Property<string>("designation_name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<byte>("is_approved");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("designation_log_id");

                    b.HasIndex("desig_id");

                    b.ToTable("tbl_designation_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_designation_master", b =>
                {
                    b.Property<int>("designation_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("designation_name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("designation_id");

                    b.ToTable("tbl_designation_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_document_type_master", b =>
                {
                    b.Property<int>("doc_type_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("doc_name")
                        .HasMaxLength(50);

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.HasKey("doc_type_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_document_type_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_adhar_details", b =>
                {
                    b.Property<int>("adhar_details_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("aadha_card_image")
                        .HasMaxLength(256);

                    b.Property<string>("aadha_card_name")
                        .HasMaxLength(100);

                    b.Property<string>("aadha_card_number")
                        .HasMaxLength(12);

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("employee_id");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("adhar_details_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_emp_adhar_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_attendance_setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MinOtHourReq");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<DateTime>("effective_from_date");

                    b.Property<int?>("employee_id");

                    b.Property<int>("is_comb_off_allowed");

                    b.Property<int>("is_deleted");

                    b.Property<int>("is_mobile_attendence_access");

                    b.Property<byte>("is_ot_allowed");

                    b.Property<bool>("is_sandwiche_applicable");

                    b.Property<DateTime>("mobile_punch_from_date");

                    b.Property<DateTime>("mobile_punch_to_date");

                    b.Property<int>("modifed_by");

                    b.Property<DateTime>("modifed_date");

                    b.Property<byte>("punch_type");

                    b.HasKey("Id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_emp_attendance_setting");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_bank_details", b =>
                {
                    b.Property<int>("bank_details_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("bank_acc")
                        .HasMaxLength(18);

                    b.Property<int?>("bank_id");

                    b.Property<string>("branch_name")
                        .HasMaxLength(150);

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("employee_id");

                    b.Property<string>("ifsc_code")
                        .HasMaxLength(11);

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int>("payment_mode");

                    b.HasKey("bank_details_id");

                    b.HasIndex("bank_acc")
                        .IsUnique()
                        .HasFilter("[is_deleted] = 0");

                    b.HasIndex("bank_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_emp_bank_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_department_allocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("department_id");

                    b.Property<DateTime>("effective_from_date");

                    b.Property<int?>("employee_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modifed_by");

                    b.Property<DateTime>("modifed_date");

                    b.Property<int?>("sub_dept_id");

                    b.HasKey("Id");

                    b.HasIndex("department_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("sub_dept_id");

                    b.ToTable("tbl_emp_department_allocation");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_desi_allocation", b =>
                {
                    b.Property<int>("emp_grade_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("applicable_from_date");

                    b.Property<DateTime>("applicable_to_date");

                    b.Property<int?>("desig_id");

                    b.Property<int?>("employee_id");

                    b.Property<int>("is_deleted");

                    b.HasKey("emp_grade_id");

                    b.HasIndex("desig_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_emp_desi_allocation");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_documents", b =>
                {
                    b.Property<int>("emp_doc_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("doc_no")
                        .HasMaxLength(50);

                    b.Property<string>("doc_path");

                    b.Property<int>("doc_type_id");

                    b.Property<int>("emp_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.HasKey("emp_doc_id");

                    b.HasIndex("company_id");

                    b.HasIndex("doc_type_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_emp_documents");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_esic_details", b =>
                {
                    b.Property<int>("esic_details_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("employee_id");

                    b.Property<string>("esic_number")
                        .HasMaxLength(20);

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_esic_applicable");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("esic_details_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("esic_number")
                        .IsUnique()
                        .HasFilter("[is_deleted] = 0");

                    b.ToTable("tbl_emp_esic_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_family_sec", b =>
                {
                    b.Property<int>("emp_family_section_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("aadhar_card_no")
                        .HasMaxLength(12);

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<DateTime>("date_of_birth");

                    b.Property<byte>("dependent");

                    b.Property<string>("document_image");

                    b.Property<int?>("employee_id");

                    b.Property<string>("gender");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_nominee");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("name_as_per_aadhar_card")
                        .HasMaxLength(200);

                    b.Property<double>("nominee_percentage");

                    b.Property<string>("occupation")
                        .HasMaxLength(200);

                    b.Property<string>("relation");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.HasKey("emp_family_section_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_emp_family_sec");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_fnf_asset", b =>
                {
                    b.Property<int>("fnf_asset_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("asset_name");

                    b.Property<string>("asset_number");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("fnf_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("is_process");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<double>("recovery_amt");

                    b.Property<int>("x_id");

                    b.HasKey("fnf_asset_id");

                    b.HasIndex("fnf_id");

                    b.ToTable("tbl_emp_fnf_asset");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_grade_allocation", b =>
                {
                    b.Property<int>("emp_grade_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("applicable_from_date");

                    b.Property<DateTime>("applicable_to_date");

                    b.Property<int?>("employee_id");

                    b.Property<int?>("grade_id");

                    b.Property<int>("is_deleted");

                    b.HasKey("emp_grade_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("grade_id");

                    b.ToTable("tbl_emp_grade_allocation");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_location_allocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<DateTime>("effective_from_date");

                    b.Property<int?>("employee_id");

                    b.Property<int>("is_deleted");

                    b.Property<int?>("location_id");

                    b.Property<int>("modifed_by");

                    b.Property<DateTime>("modifed_date");

                    b.Property<int?>("sub_location_id");

                    b.HasKey("Id");

                    b.HasIndex("employee_id");

                    b.HasIndex("location_id");

                    b.HasIndex("sub_location_id");

                    b.ToTable("tbl_emp_location_allocation");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_manager", b =>
                {
                    b.Property<int>("emp_mgr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("applicable_from_date");

                    b.Property<int?>("employee_id");

                    b.Property<byte>("final_approval");

                    b.Property<int>("is_deleted");

                    b.Property<int?>("m_one_id");

                    b.HasKey("emp_mgr_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("m_one_id");

                    b.ToTable("tbl_emp_manager");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_officaial_sec", b =>
                {
                    b.Property<int>("emp_official_section_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("card_number")
                        .HasMaxLength(64);

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("emp_father_name")
                        .HasMaxLength(32);

                    b.Property<string>("employee_first_name")
                        .HasMaxLength(32);

                    b.Property<int?>("employee_id");

                    b.Property<string>("employee_last_name")
                        .HasMaxLength(32);

                    b.Property<string>("employee_middle_name")
                        .HasMaxLength(32);

                    b.Property<string>("employee_photo_path");

                    b.Property<int>("gender");

                    b.Property<string>("hr_spoc")
                        .HasMaxLength(100);

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<byte>("marital_status");

                    b.Property<string>("nationality")
                        .HasMaxLength(32);

                    b.Property<string>("official_contact_no")
                        .HasMaxLength(20);

                    b.Property<string>("official_email_id")
                        .HasMaxLength(256);

                    b.Property<int?>("religion_id");

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.Property<string>("salutation")
                        .HasMaxLength(16);

                    b.Property<int?>("state_id");

                    b.HasKey("emp_official_section_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("religion_id");

                    b.HasIndex("state_id");

                    b.ToTable("tbl_emp_officaial_sec");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_pan_details", b =>
                {
                    b.Property<int>("pan_details_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("employee_id");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("pan_card_image")
                        .HasMaxLength(254);

                    b.Property<string>("pan_card_name")
                        .HasMaxLength(100);

                    b.Property<string>("pan_card_number")
                        .HasMaxLength(10);

                    b.HasKey("pan_details_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_emp_pan_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_personal_sec", b =>
                {
                    b.Property<int>("emp_personal_section_id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("blood_group");

                    b.Property<string>("blood_group_doc");

                    b.Property<string>("corresponding_address_line_one")
                        .HasMaxLength(250);

                    b.Property<string>("corresponding_address_line_two")
                        .HasMaxLength(250);

                    b.Property<string>("corresponding_address_proof_document");

                    b.Property<int>("corresponding_city");

                    b.Property<int>("corresponding_country");

                    b.Property<string>("corresponding_document_type");

                    b.Property<int>("corresponding_pin_code");

                    b.Property<int>("corresponding_state");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("emergency_contact_address_proof_document");

                    b.Property<int>("emergency_contact_city");

                    b.Property<int>("emergency_contact_country");

                    b.Property<string>("emergency_contact_document_type");

                    b.Property<string>("emergency_contact_line_one")
                        .HasMaxLength(250);

                    b.Property<string>("emergency_contact_line_two")
                        .HasMaxLength(250);

                    b.Property<string>("emergency_contact_mobile_number")
                        .HasMaxLength(15);

                    b.Property<string>("emergency_contact_name")
                        .HasMaxLength(200);

                    b.Property<int>("emergency_contact_pin_code");

                    b.Property<string>("emergency_contact_relation");

                    b.Property<int>("emergency_contact_state");

                    b.Property<int?>("employee_id");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_emg_same_as_permanent");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("permanent_address_line_one")
                        .HasMaxLength(250);

                    b.Property<string>("permanent_address_line_two")
                        .HasMaxLength(250);

                    b.Property<string>("permanent_address_proof_document");

                    b.Property<int>("permanent_city");

                    b.Property<int>("permanent_country");

                    b.Property<string>("permanent_document_type");

                    b.Property<string>("permanent_pin_code")
                        .HasMaxLength(12);

                    b.Property<int>("permanent_state");

                    b.Property<string>("primary_contact_number")
                        .HasMaxLength(15);

                    b.Property<string>("primary_email_id")
                        .HasMaxLength(100);

                    b.Property<string>("secondary_contact_number")
                        .HasMaxLength(15);

                    b.Property<string>("secondary_email_id")
                        .HasMaxLength(100);

                    b.HasKey("emp_personal_section_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_emp_personal_sec");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_pf_details", b =>
                {
                    b.Property<int>("pf_details_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("bank_acc")
                        .HasMaxLength(18);

                    b.Property<int?>("bank_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("employee_id");

                    b.Property<string>("ifsc_code")
                        .HasMaxLength(11);

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_eps_applicable");

                    b.Property<byte>("is_pf_applicable");

                    b.Property<byte>("is_pt_applicable");

                    b.Property<byte>("is_vpf_applicable");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<double>("pf_celing");

                    b.Property<int>("pf_group");

                    b.Property<string>("pf_number")
                        .HasMaxLength(30);

                    b.Property<string>("pt_group");

                    b.Property<string>("spt_Description");

                    b.Property<string>("uan_number");

                    b.Property<int>("vpf_Group");

                    b.Property<double>("vpf_amount");

                    b.HasKey("pf_details_id");

                    b.HasIndex("bank_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("pf_number")
                        .IsUnique()
                        .HasFilter("[is_deleted] = 0");

                    b.ToTable("tbl_emp_pf_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_prev_employement", b =>
                {
                    b.Property<int>("emp_pr_employment_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("current_comp_id");

                    b.Property<string>("designation")
                        .HasMaxLength(100);

                    b.Property<int?>("emp_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("is_relieved");

                    b.Property<int>("job_type");

                    b.Property<DateTime>("last_modifed_dt");

                    b.Property<int>("last_modified_by");

                    b.Property<string>("pr_comp_address")
                        .HasMaxLength(500);

                    b.Property<DateTime>("pr_comp_doj");

                    b.Property<string>("pr_comp_name")
                        .HasMaxLength(100);

                    b.Property<DateTime>("pr_comp_relieve_dt");

                    b.Property<decimal>("relevant_exp");

                    b.Property<string>("relieve_reason")
                        .HasMaxLength(500);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<string>("reporting_name")
                        .HasMaxLength(100);

                    b.Property<string>("reporting_to");

                    b.Property<string>("rpting_email")
                        .HasMaxLength(100);

                    b.Property<string>("rpting_no");

                    b.Property<decimal>("salary");

                    b.Property<decimal>("total_exp");

                    b.HasKey("emp_pr_employment_id");

                    b.HasIndex("current_comp_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_emp_prev_employement");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_qualification_sec", b =>
                {
                    b.Property<int>("emp_qualification_section_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("board_or_university")
                        .HasMaxLength(200);

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("document_image");

                    b.Property<byte>("education_level");

                    b.Property<byte>("education_type");

                    b.Property<int?>("employee_id");

                    b.Property<string>("institute_or_school")
                        .HasMaxLength(200);

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("marks_division_cgpa");

                    b.Property<string>("passing_year");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<string>("stream")
                        .HasMaxLength(100);

                    b.Property<string>("title");

                    b.HasKey("emp_qualification_section_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_emp_qualification_sec");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_salary_master", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("applicable_from_dt");

                    b.Property<decimal>("applicable_value");

                    b.Property<string>("checker_remark");

                    b.Property<int?>("component_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<int>("is_active");

                    b.Property<string>("maker_remark");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<decimal>("salaryrevision");

                    b.HasKey("sno");

                    b.HasIndex("component_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_emp_salary_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_separation", b =>
                {
                    b.Property<int>("sepration_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("admin_dt");

                    b.Property<int?>("admin_id");

                    b.Property<string>("admin_remarks");

                    b.Property<DateTime>("app1_dt");

                    b.Property<string>("app1_remarks");

                    b.Property<DateTime>("app2_dt");

                    b.Property<string>("app2_remarks");

                    b.Property<DateTime>("app3_dt");

                    b.Property<string>("app3_remarks");

                    b.Property<int?>("approver1_id");

                    b.Property<int?>("approver2_id");

                    b.Property<int?>("apprver3_id");

                    b.Property<string>("cancel_remarks");

                    b.Property<DateTime>("cancelation_dt");

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("diff_notice_days");

                    b.Property<int>("emp_id");

                    b.Property<DateTime>("final_relieve_dt");

                    b.Property<int>("gratuity");

                    b.Property<int>("is_admin_approved");

                    b.Property<int>("is_approved1");

                    b.Property<int>("is_approved2");

                    b.Property<int>("is_approved3");

                    b.Property<int>("is_cancel");

                    b.Property<int>("is_deleted");

                    b.Property<int>("is_final_approve");

                    b.Property<int>("is_kt_transfered");

                    b.Property<int>("is_no_due_cleared");

                    b.Property<int>("is_relieving_dt_change");

                    b.Property<int>("is_withdrawal");

                    b.Property<DateTime>("last_wrking_dt");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int>("notice_day");

                    b.Property<DateTime>("policy_relieving_dt");

                    b.Property<string>("ref_doc_path");

                    b.Property<int>("req_notice_days");

                    b.Property<string>("req_reason");

                    b.Property<DateTime>("req_relieving_date");

                    b.Property<string>("req_remarks");

                    b.Property<DateTime>("resignation_dt");

                    b.Property<int>("salary_process_type");

                    b.Property<string>("withdrawal_type")
                        .HasMaxLength(250);

                    b.HasKey("sepration_id");

                    b.HasIndex("admin_id");

                    b.HasIndex("approver1_id");

                    b.HasIndex("approver2_id");

                    b.HasIndex("apprver3_id");

                    b.HasIndex("company_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_emp_separation");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_shift_allocation", b =>
                {
                    b.Property<int>("emp_shift_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("applicable_from_date");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("employee_id");

                    b.Property<int>("is_deleted");

                    b.Property<int?>("shift_id");

                    b.HasKey("emp_shift_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("shift_id");

                    b.ToTable("tbl_emp_shift_allocation");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_weekoff", b =>
                {
                    b.Property<int>("emp_weekoff_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<DateTime>("effective_from_date");

                    b.Property<int?>("employee_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("is_fixed_weekly_off");

                    b.Property<int>("modifed_by");

                    b.Property<DateTime>("modifed_date");

                    b.HasKey("emp_weekoff_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_emp_weekoff");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_withdrawal", b =>
                {
                    b.Property<int>("withdrawal_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<byte>("gratuity");

                    b.Property<byte>("is_deleted");

                    b.Property<DateTime>("last_wrking_dt");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int>("modify_by");

                    b.Property<int>("notice_day");

                    b.Property<string>("reason")
                        .HasMaxLength(250);

                    b.Property<string>("remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("resign_dt");

                    b.Property<byte>("salary_process_type");

                    b.Property<string>("withdrawal_type")
                        .HasMaxLength(250);

                    b.HasKey("withdrawal_id");

                    b.HasIndex("company_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_emp_withdrawal");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_working_role_allocation", b =>
                {
                    b.Property<int>("emp_working_role_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("employee_id");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("work_r_id");

                    b.HasKey("emp_working_role_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("work_r_id");

                    b.ToTable("tbl_emp_working_role_allocation");
                });

            modelBuilder.Entity("projContext.DB.tbl_employee_company_map", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("employee_id");

                    b.Property<bool>("is_default");

                    b.Property<int>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("sno");

                    b.HasIndex("company_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_employee_company_map");
                });

            modelBuilder.Entity("projContext.DB.tbl_employee_income_tax_amount", b =>
                {
                    b.Property<int>("pre_emp_inc_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("emp_id");

                    b.Property<double>("income_tax_amount");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("pre_emp_inc_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_employee_income_tax_amount");
                });

            modelBuilder.Entity("projContext.DB.tbl_employee_master", b =>
                {
                    b.Property<int>("employee_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("emp_code")
                        .HasMaxLength(100);

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("employee_id");

                    b.HasIndex("emp_code")
                        .IsUnique();

                    b.ToTable("tbl_employee_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_employeementtype_settings", b =>
                {
                    b.Property<int>("typesetting_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("employeement_type");

                    b.Property<int>("grade_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int>("notice_period");

                    b.Property<int>("notice_period_days");

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.HasKey("typesetting_id");

                    b.HasIndex("company_id");

                    b.HasIndex("grade_id");

                    b.ToTable("tbl_employeementtype_settings");
                });

            modelBuilder.Entity("projContext.DB.tbl_employment_type_master", b =>
                {
                    b.Property<int>("employment_type_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<DateTime>("effective_date");

                    b.Property<int?>("employee_id");

                    b.Property<byte>("employment_type");

                    b.Property<int>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("employment_type_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_employment_type_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_cycle_master", b =>
                {
                    b.Property<int>("cycle_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<byte>("cycle_type");

                    b.Property<DateTime>("from_date");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int>("number_of_day");

                    b.HasKey("cycle_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_epa_cycle_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_fiscal_yr_mstr", b =>
                {
                    b.Property<int>("fiscal_year_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("financial_year_name");

                    b.Property<DateTime>("from_date");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<DateTime>("to_date");

                    b.HasKey("fiscal_year_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_epa_fiscal_yr_mstr");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_kpi_criteria_submission", b =>
                {
                    b.Property<int>("kpi_criteria_submission_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("crit_id");

                    b.Property<int?>("kpi_submission_id");

                    b.HasKey("kpi_criteria_submission_id");

                    b.HasIndex("crit_id");

                    b.HasIndex("kpi_submission_id");

                    b.ToTable("tbl_epa_kpi_criteria_submission");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_kpi_submission", b =>
                {
                    b.Property<int>("kpi_submission_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("aggreed");

                    b.Property<DateTime>("change_dt");

                    b.Property<string>("comment");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("key_area_id");

                    b.Property<int>("score");

                    b.Property<int>("self");

                    b.Property<int?>("submission_id");

                    b.HasKey("kpi_submission_id");

                    b.HasIndex("key_area_id");

                    b.HasIndex("submission_id");

                    b.ToTable("tbl_epa_kpi_submission");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_kra_submission", b =>
                {
                    b.Property<int>("kra_submission_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("change_dt");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("kra_id");

                    b.Property<int?>("rating_id");

                    b.Property<int?>("submission_id");

                    b.HasKey("kra_submission_id");

                    b.HasIndex("kra_id");

                    b.HasIndex("rating_id");

                    b.HasIndex("submission_id");

                    b.ToTable("tbl_epa_kra_submission");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_question_submission", b =>
                {
                    b.Property<int>("question_submission_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("change_dt");

                    b.Property<byte>("is_deleted");

                    b.Property<string>("question_answer");

                    b.Property<int?>("question_id");

                    b.Property<string>("remarks");

                    b.Property<int?>("submission_id");

                    b.Property<int?>("tab_id");

                    b.HasKey("question_submission_id");

                    b.HasIndex("question_id");

                    b.HasIndex("submission_id");

                    b.HasIndex("tab_id");

                    b.ToTable("tbl_epa_question_submission");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_status_master", b =>
                {
                    b.Property<int>("epa_status_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<int>("display_for");

                    b.Property<int>("display_for_rm1");

                    b.Property<int>("display_for_rm2");

                    b.Property<int>("display_for_rm3");

                    b.Property<int>("display_order");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int>("status");

                    b.Property<string>("status_name")
                        .HasMaxLength(250);

                    b.HasKey("epa_status_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_epa_status_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_submission", b =>
                {
                    b.Property<int>("submission_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("cycle_id");

                    b.Property<string>("cycle_name");

                    b.Property<int?>("department_id");

                    b.Property<int?>("desig_id");

                    b.Property<int?>("emp_id");

                    b.Property<int?>("emp_off_id");

                    b.Property<byte>("epa_close_status");

                    b.Property<int?>("epa_current_status");

                    b.Property<DateTime>("epa_end_date");

                    b.Property<DateTime>("epa_start_date");

                    b.Property<string>("final_remarks");

                    b.Property<string>("final_remarks_rm1");

                    b.Property<string>("final_remarks_rm2");

                    b.Property<string>("final_remarks_rm3");

                    b.Property<byte>("final_review");

                    b.Property<byte>("final_review_rm1");

                    b.Property<byte>("final_review_rm2");

                    b.Property<byte>("final_review_rm3");

                    b.Property<int?>("fiscal_year_id");

                    b.Property<int>("get_score");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("rm_id1");

                    b.Property<int?>("rm_id2");

                    b.Property<int?>("rm_id3");

                    b.Property<DateTime>("submission_dt");

                    b.Property<int>("total_score");

                    b.Property<int>("user_id");

                    b.Property<int?>("w_r_id");

                    b.HasKey("submission_id");

                    b.HasIndex("company_id");

                    b.HasIndex("department_id");

                    b.HasIndex("desig_id");

                    b.HasIndex("emp_id");

                    b.HasIndex("emp_off_id");

                    b.HasIndex("epa_current_status");

                    b.HasIndex("fiscal_year_id");

                    b.HasIndex("w_r_id");

                    b.ToTable("tbl_epa_submission");
                });

            modelBuilder.Entity("projContext.DB.tbl_event_master", b =>
                {
                    b.Property<int>("event_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<DateTime>("event_date");

                    b.Property<string>("event_name")
                        .HasMaxLength(50);

                    b.Property<string>("event_place")
                        .HasMaxLength(150);

                    b.Property<DateTime>("event_time");

                    b.Property<int>("is_active");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.HasKey("event_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_event_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_attendance_dtl", b =>
                {
                    b.Property<int>("fnf_attend_id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Absent_days");

                    b.Property<double>("Holiday_days");

                    b.Property<double>("Leave_days");

                    b.Property<double>("Present_days");

                    b.Property<double>("Total_Paid_days");

                    b.Property<double>("Week_off_days");

                    b.Property<double>("acutual_lop_days");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("emp_sep_id");

                    b.Property<double>("final_lop_days");

                    b.Property<int?>("fnf_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("is_process");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int>("monthyear");

                    b.Property<double>("paid_amount");

                    b.Property<int>("totaldays");

                    b.Property<int>("x_id");

                    b.HasKey("fnf_attend_id");

                    b.HasIndex("fnf_id");

                    b.ToTable("tbl_fnf_attendance_dtl");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_component", b =>
                {
                    b.Property<int>("variable_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("component_id");

                    b.Property<int>("component_type");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("emp_sep_id");

                    b.Property<int?>("fnf_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("is_process");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int>("monthyear");

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.Property<double>("variable_amt");

                    b.Property<int>("x_id");

                    b.HasKey("variable_id");

                    b.HasIndex("component_id");

                    b.HasIndex("fnf_id");

                    b.ToTable("tbl_fnf_component");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_leave_encash", b =>
                {
                    b.Property<int>("leave_encash_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("emp_sep_id");

                    b.Property<int?>("fnf_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("is_process");

                    b.Property<double>("leave_balance");

                    b.Property<decimal>("leave_encash_cal");

                    b.Property<double>("leave_encash_day");

                    b.Property<decimal>("leave_encash_final");

                    b.Property<int?>("leave_type_id");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int>("x_id");

                    b.HasKey("leave_encash_id");

                    b.HasIndex("fnf_id");

                    b.HasIndex("leave_type_id");

                    b.ToTable("tbl_fnf_leave_encash");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_loan_recover", b =>
                {
                    b.Property<int>("loan_recovery_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("emp_sep_id");

                    b.Property<byte>("is_process");

                    b.Property<decimal>("loan_recover_amt");

                    b.Property<int?>("loan_req_id");

                    b.Property<int>("x_id");

                    b.HasKey("loan_recovery_id");

                    b.HasIndex("loan_req_id");

                    b.ToTable("tbl_fnf_loan_recover");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_master", b =>
                {
                    b.Property<int>("pkid_fnfMaster")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<int?>("fkid_empSepration");

                    b.Property<int>("is_deleted");

                    b.Property<int>("is_freezed");

                    b.Property<int>("is_gratuity");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<DateTime>("last_working_date");

                    b.Property<int>("monthYear");

                    b.Property<decimal>("net_amt");

                    b.Property<int>("notice_payment_days");

                    b.Property<int>("notice_recovery_days");

                    b.Property<string>("remarks");

                    b.Property<DateTime>("resign_dt");

                    b.Property<int>("settlement_type");

                    b.Property<decimal>("settlment_amt");

                    b.Property<DateTime>("settlment_dt");

                    b.HasKey("pkid_fnfMaster");

                    b.HasIndex("emp_id");

                    b.HasIndex("fkid_empSepration");

                    b.ToTable("tbl_fnf_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_reimburesment", b =>
                {
                    b.Property<int>("fnf_reim_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("fnf_id");

                    b.Property<decimal>("reim_amt");

                    b.Property<decimal>("reim_bal");

                    b.Property<string>("reim_name")
                        .HasMaxLength(200);

                    b.Property<int>("x_id");

                    b.HasKey("fnf_reim_id");

                    b.HasIndex("fnf_id");

                    b.ToTable("tbl_fnf_reimburesment");
                });

            modelBuilder.Entity("projContext.DB.tbl_grade_master", b =>
                {
                    b.Property<int>("grade_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("grade_name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("grade_id");

                    b.ToTable("tbl_grade_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_grade_master_log", b =>
                {
                    b.Property<int>("grade_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("grade_id");

                    b.Property<string>("grade_name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<byte>("is_approved");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("grade_log_id");

                    b.HasIndex("grade_id");

                    b.ToTable("tbl_grade_master_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_guid_detail", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128);

                    b.Property<string>("DeviceId")
                        .HasMaxLength(256);

                    b.Property<string>("FromIP")
                        .HasMaxLength(256);

                    b.Property<DateTime>("genration_dt");

                    b.HasKey("id");

                    b.ToTable("tbl_guid_detail");
                });

            modelBuilder.Entity("projContext.DB.tbl_health_card_master", b =>
                {
                    b.Property<int>("health_card_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("employee_id");

                    b.Property<string>("health_card_path");

                    b.Property<int>("is_active");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.HasKey("health_card_id");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_health_card_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_holi_comp_list_log", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("cid");

                    b.Property<int?>("h_id");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("l_id");

                    b.Property<int?>("lid");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("sno");

                    b.HasIndex("cid");

                    b.HasIndex("h_id");

                    b.HasIndex("l_id");

                    b.HasIndex("lid");

                    b.ToTable("tbl_holi_comp_list_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_master", b =>
                {
                    b.Property<int>("holiday_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<DateTime>("from_date");

                    b.Property<DateTime>("holiday_date");

                    b.Property<string>("holiday_name")
                        .HasMaxLength(200);

                    b.Property<string>("holidayno");

                    b.Property<int>("is_active");

                    b.Property<byte>("is_applicable_on_all_comp");

                    b.Property<byte>("is_applicable_on_all_emp");

                    b.Property<byte>("is_applicable_on_all_location");

                    b.Property<byte>("is_applicable_on_all_religion");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<DateTime>("to_date");

                    b.HasKey("holiday_id");

                    b.ToTable("tbl_holiday_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_master_comp_list", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int?>("holiday_id");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("location_id");

                    b.HasKey("sno");

                    b.HasIndex("company_id");

                    b.HasIndex("holiday_id");

                    b.HasIndex("location_id");

                    b.ToTable("tbl_holiday_master_comp_list");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_master_emp_list", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int?>("employee_id");

                    b.Property<int?>("holiday_id");

                    b.Property<byte>("is_deleted");

                    b.HasKey("sno");

                    b.HasIndex("company_id");

                    b.HasIndex("employee_id");

                    b.HasIndex("holiday_id");

                    b.ToTable("tbl_holiday_master_emp_list");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_master_log", b =>
                {
                    b.Property<int>("holiday_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<DateTime>("from_date");

                    b.Property<DateTime>("holiday_date");

                    b.Property<int?>("holiday_id");

                    b.Property<string>("holiday_name");

                    b.Property<byte>("is_applicable_on_all_comp");

                    b.Property<byte>("is_applicable_on_all_emp");

                    b.Property<byte>("is_applicable_on_all_location");

                    b.Property<byte>("is_applicable_on_all_religion");

                    b.Property<byte>("is_approved");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<DateTime>("to_date");

                    b.HasKey("holiday_log_id");

                    b.HasIndex("holiday_id");

                    b.ToTable("tbl_holiday_master_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_mstr_rel_list", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("h_id");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("religion_id");

                    b.HasKey("sno");

                    b.HasIndex("h_id");

                    b.HasIndex("religion_id");

                    b.ToTable("tbl_holiday_mstr_rel_list");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_rel_list_log", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("h_r_id");

                    b.Property<int?>("holiday_id");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("religion_id");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("sno");

                    b.HasIndex("h_r_id");

                    b.HasIndex("holiday_id");

                    b.HasIndex("religion_id");

                    b.ToTable("tbl_holiday_rel_list_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_holyd_emp_list_log", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("employee_id");

                    b.Property<int?>("h_id");

                    b.Property<int?>("holiday_id");

                    b.Property<byte>("is_approved");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("sno");

                    b.HasIndex("employee_id");

                    b.HasIndex("h_id");

                    b.HasIndex("holiday_id");

                    b.ToTable("tbl_holyd_emp_list_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_kpi_criteria", b =>
                {
                    b.Property<int>("kpi_cr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("criteria_count");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<byte>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("kpi_cr_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_kpi_criteria");
                });

            modelBuilder.Entity("projContext.DB.tbl_kpi_criteria_master", b =>
                {
                    b.Property<int>("crit_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("criteria");

                    b.Property<int>("criteria_number");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("k_a_id");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("crit_id");

                    b.HasIndex("k_a_id");

                    b.ToTable("tbl_kpi_criteria_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_kpi_key_area_master", b =>
                {
                    b.Property<int>("key_area_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("comment")
                        .HasMaxLength(1000);

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("deleted_by");

                    b.Property<string>("expected_result")
                        .HasMaxLength(250);

                    b.Property<byte>("is_deleted");

                    b.Property<string>("key_area");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int?>("otype_id");

                    b.Property<int?>("w_r_id");

                    b.Property<int>("wtg");

                    b.HasKey("key_area_id");

                    b.HasIndex("company_id");

                    b.HasIndex("otype_id");

                    b.HasIndex("w_r_id");

                    b.ToTable("tbl_kpi_key_area_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_kpi_objective_type", b =>
                {
                    b.Property<int>("obj_type_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("deleted_by");

                    b.Property<string>("description")
                        .HasMaxLength(1000);

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("objective_name")
                        .HasMaxLength(500);

                    b.HasKey("obj_type_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_kpi_objective_type");
                });

            modelBuilder.Entity("projContext.DB.tbl_kpi_rating_master", b =>
                {
                    b.Property<int>("kpi_rating_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("deleted_by");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<int>("display_order");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("rating_name")
                        .HasMaxLength(10);

                    b.HasKey("kpi_rating_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_kpi_rating_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_kra_master", b =>
                {
                    b.Property<int>("kra_mstr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<DateTime>("creatd_dt");

                    b.Property<int>("created_by");

                    b.Property<int>("deleted_by");

                    b.Property<int?>("department_id");

                    b.Property<string>("description")
                        .HasMaxLength(1000);

                    b.Property<int>("display_order");

                    b.Property<string>("factor_result")
                        .HasMaxLength(1000);

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int?>("wrk_role_id");

                    b.HasKey("kra_mstr_id");

                    b.HasIndex("company_id");

                    b.HasIndex("department_id");

                    b.HasIndex("wrk_role_id");

                    b.ToTable("tbl_kra_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_app_emp_type_log", b =>
                {
                    b.Property<int>("log_sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<byte>("employment_type");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("lid");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<int?>("sno");

                    b.HasKey("log_sno");

                    b.HasIndex("lid");

                    b.HasIndex("sno");

                    b.ToTable("tbl_leave_app_emp_type_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_app_on_dept", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("id");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("lid");

                    b.HasKey("sno");

                    b.HasIndex("id");

                    b.HasIndex("lid");

                    b.ToTable("tbl_leave_app_on_dept");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_app_on_emp_type", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("employment_type");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("l_app_id");

                    b.HasKey("sno");

                    b.HasIndex("l_app_id");

                    b.ToTable("tbl_leave_app_on_emp_type");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_appcbl_on_company", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("c_id");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("l_a_id");

                    b.Property<int?>("location_id");

                    b.HasKey("sno");

                    b.HasIndex("c_id");

                    b.HasIndex("l_a_id");

                    b.HasIndex("location_id");

                    b.ToTable("tbl_leave_appcbl_on_company");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_appcbl_on_dept_log", b =>
                {
                    b.Property<int>("log_sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("d_id");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("l_a_id");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<int?>("sno");

                    b.HasKey("log_sno");

                    b.HasIndex("d_id");

                    b.HasIndex("l_a_id");

                    b.HasIndex("sno");

                    b.ToTable("tbl_leave_appcbl_on_dept_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_appcbl_on_religion", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("l_app_id");

                    b.Property<int?>("religion_id");

                    b.HasKey("sno");

                    b.HasIndex("l_app_id");

                    b.HasIndex("religion_id");

                    b.ToTable("tbl_leave_appcbl_on_religion");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_appcbl_rel_log", b =>
                {
                    b.Property<int>("log_sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("lid");

                    b.Property<int?>("r_id");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<int?>("sno");

                    b.HasKey("log_sno");

                    b.HasIndex("lid");

                    b.HasIndex("r_id");

                    b.HasIndex("sno");

                    b.ToTable("tbl_leave_appcbl_rel_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_appcbly_on_comp_log", b =>
                {
                    b.Property<int>("log_sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("c_id");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("l_a_id");

                    b.Property<int?>("l_id");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<int?>("sno");

                    b.HasKey("log_sno");

                    b.HasIndex("c_id");

                    b.HasIndex("l_a_id");

                    b.HasIndex("l_id");

                    b.HasIndex("sno");

                    b.ToTable("tbl_leave_appcbly_on_comp_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_applicablity", b =>
                {
                    b.Property<int>("leave_applicablity_id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("admin_can_apply");

                    b.Property<byte>("day_part");

                    b.Property<byte>("employee_can_apply");

                    b.Property<byte>("is_aplicable_on_all_company");

                    b.Property<byte>("is_aplicable_on_all_department");

                    b.Property<byte>("is_aplicable_on_all_emp_type");

                    b.Property<byte>("is_aplicable_on_all_location");

                    b.Property<byte>("is_aplicable_on_all_religion");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("leave_applicable_for");

                    b.Property<DateTime>("leave_applicable_in_hours_and_minutes");

                    b.Property<int?>("leave_info_id");

                    b.HasKey("leave_applicablity_id");

                    b.HasIndex("leave_info_id");

                    b.ToTable("tbl_leave_applicablity");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_applicablity_log", b =>
                {
                    b.Property<int>("leave_applicablity_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("admin_can_apply");

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<byte>("day_part");

                    b.Property<byte>("employee_can_apply");

                    b.Property<byte>("is_aplicable_on_all_company");

                    b.Property<byte>("is_aplicable_on_all_department");

                    b.Property<byte>("is_aplicable_on_all_emp_type");

                    b.Property<byte>("is_aplicable_on_all_location");

                    b.Property<byte>("is_aplicable_on_all_religion");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("l_app_id");

                    b.Property<byte>("leave_applicable_for");

                    b.Property<DateTime>("leave_applicable_in_hours_and_minutes");

                    b.Property<int?>("leave_info_id");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("leave_applicablity_log_id");

                    b.HasIndex("l_app_id");

                    b.HasIndex("leave_info_id");

                    b.ToTable("tbl_leave_applicablity_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_cashable", b =>
                {
                    b.Property<int>("leave_cashable_id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("cashable_after_year");

                    b.Property<byte>("cashable_type");

                    b.Property<byte>("is_cashable");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("leave_info_id");

                    b.Property<int>("maximum_cashable_leave");

                    b.HasKey("leave_cashable_id");

                    b.HasIndex("leave_info_id");

                    b.ToTable("tbl_leave_cashable");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_cashable_log", b =>
                {
                    b.Property<int>("leave_cashable_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<byte>("cashable_after_year");

                    b.Property<byte>("cashable_type");

                    b.Property<byte>("is_approved");

                    b.Property<byte>("is_cashable");

                    b.Property<int?>("leave_cashable_id");

                    b.Property<int?>("leave_info_id");

                    b.Property<int>("maximum_cashable_leave");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("leave_cashable_log_id");

                    b.HasIndex("leave_cashable_id");

                    b.HasIndex("leave_info_id");

                    b.ToTable("tbl_leave_cashable_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_credit", b =>
                {
                    b.Property<int>("leave_credit_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("advance_applicable_day");

                    b.Property<string>("certificate_path");

                    b.Property<byte>("frequency_type");

                    b.Property<byte>("is_applicable_for_advance");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_half_day_applicable");

                    b.Property<byte>("is_leave_accrue");

                    b.Property<byte>("is_required_certificate");

                    b.Property<decimal>("leave_credit_day");

                    b.Property<double>("leave_credit_number");

                    b.Property<int?>("leave_info_id");

                    b.Property<int>("max_accrue");

                    b.HasKey("leave_credit_id");

                    b.HasIndex("leave_info_id");

                    b.ToTable("tbl_leave_credit");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_credit_log", b =>
                {
                    b.Property<int>("leave_credit_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("advance_applicable_day");

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<string>("certificate_path");

                    b.Property<byte>("frequency_type");

                    b.Property<byte>("is_applicable_for_advance");

                    b.Property<byte>("is_approved");

                    b.Property<byte>("is_half_day_applicable");

                    b.Property<byte>("is_leave_accrue");

                    b.Property<byte>("is_required_certificate");

                    b.Property<int?>("leave_credit_id");

                    b.Property<int?>("leave_info_id");

                    b.Property<int>("max_accrue");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("leave_credit_log_id");

                    b.HasIndex("leave_credit_id");

                    b.HasIndex("leave_info_id");

                    b.ToTable("tbl_leave_credit_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_info", b =>
                {
                    b.Property<int>("leave_info_id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("is_active");

                    b.Property<DateTime>("leave_tenure_from_date");

                    b.Property<DateTime>("leave_tenure_to_date");

                    b.Property<byte>("leave_type");

                    b.Property<int?>("leave_type_id");

                    b.HasKey("leave_info_id");

                    b.HasIndex("leave_type_id");

                    b.ToTable("tbl_leave_info");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_info_log", b =>
                {
                    b.Property<int>("leave_info_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("leave_info_id");

                    b.Property<DateTime>("leave_tenure_from_date");

                    b.Property<DateTime>("leave_tenure_to_date");

                    b.Property<byte>("leave_type");

                    b.Property<int?>("leave_type_id");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("leave_info_log_id");

                    b.HasIndex("leave_info_id");

                    b.HasIndex("leave_type_id");

                    b.ToTable("tbl_leave_info_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_ledger", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("created_by");

                    b.Property<double>("credit");

                    b.Property<double>("dredit");

                    b.Property<int?>("e_id");

                    b.Property<DateTime>("entry_date");

                    b.Property<byte>("leave_addition_type");

                    b.Property<int?>("leave_info_id");

                    b.Property<int?>("leave_type_id");

                    b.Property<int>("monthyear");

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("transaction_date");

                    b.Property<int>("transaction_no");

                    b.Property<byte>("transaction_type");

                    b.HasKey("sno");

                    b.HasIndex("e_id");

                    b.HasIndex("leave_info_id");

                    b.HasIndex("leave_type_id");

                    b.ToTable("tbl_leave_ledger");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_ledger_log", b =>
                {
                    b.Property<int>("log_sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<double>("credit");

                    b.Property<double>("dredit");

                    b.Property<int?>("e_id");

                    b.Property<byte>("is_approved");

                    b.Property<byte>("leave_addition_type");

                    b.Property<int?>("leave_type_id");

                    b.Property<int>("monthyear");

                    b.Property<string>("remarks");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<int?>("sno");

                    b.Property<DateTime>("transaction_date");

                    b.Property<int>("transaction_no");

                    b.Property<string>("transaction_type");

                    b.HasKey("log_sno");

                    b.HasIndex("e_id");

                    b.HasIndex("leave_type_id");

                    b.HasIndex("sno");

                    b.ToTable("tbl_leave_ledger_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_request", b =>
                {
                    b.Property<int>("leave_request_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("a1_e_id");

                    b.Property<int?>("a2_e_id");

                    b.Property<int?>("a3_e_id");

                    b.Property<DateTime>("admin_ar_date");

                    b.Property<int?>("admin_id");

                    b.Property<string>("admin_remarks");

                    b.Property<string>("approval1_remarks")
                        .HasMaxLength(200);

                    b.Property<string>("approval2_remarks")
                        .HasMaxLength(200);

                    b.Property<string>("approval3_remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("approval_date1");

                    b.Property<DateTime>("approval_date2");

                    b.Property<DateTime>("approval_date3");

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<byte>("day_part");

                    b.Property<int>("deleted_by");

                    b.Property<DateTime>("deleted_dt");

                    b.Property<string>("deleted_remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("from_date");

                    b.Property<int>("is_admin_approve");

                    b.Property<byte>("is_approved1");

                    b.Property<byte>("is_approved2");

                    b.Property<byte>("is_approved3");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_final_approve");

                    b.Property<byte>("leave_applicable_for");

                    b.Property<DateTime>("leave_applicable_in_hours_and_minutes");

                    b.Property<int?>("leave_info_id");

                    b.Property<double>("leave_qty");

                    b.Property<int?>("leave_type_id");

                    b.Property<int?>("r_e_id");

                    b.Property<DateTime>("requester_date");

                    b.Property<string>("requester_remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("to_date");

                    b.HasKey("leave_request_id");

                    b.HasIndex("a1_e_id");

                    b.HasIndex("a2_e_id");

                    b.HasIndex("a3_e_id");

                    b.HasIndex("admin_id");

                    b.HasIndex("company_id");

                    b.HasIndex("leave_info_id");

                    b.HasIndex("leave_type_id");

                    b.HasIndex("r_e_id");

                    b.ToTable("tbl_leave_request");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_rule", b =>
                {
                    b.Property<int>("leave_credit_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("applicable_if_employee_joined_before_dt");

                    b.Property<byte>("applied_sandwich_rule");

                    b.Property<byte>("can_carried_forward");

                    b.Property<byte>("certificate_require_for_min_no_of_day");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("leave_info_id");

                    b.Property<int>("maxi_negative_leave_applicable");

                    b.Property<int>("maximum_carried_forward");

                    b.Property<byte>("maximum_leave_can_be_in_day");

                    b.Property<byte>("maximum_leave_can_be_taken");

                    b.Property<byte>("maximum_leave_can_be_taken_in_quater");

                    b.Property<byte>("maximum_leave_can_be_taken_type");

                    b.Property<byte>("maximum_leave_clubbed_in_tenure_number_of_leave");

                    b.Property<int>("minimum_leave_applicable");

                    b.Property<byte>("number_maximum_negative_leave_balance");

                    b.HasKey("leave_credit_id");

                    b.HasIndex("leave_info_id");

                    b.ToTable("tbl_leave_rule");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_rule_log", b =>
                {
                    b.Property<int>("leave_credit_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("applicable_if_employee_joined_before_dt");

                    b.Property<byte>("applied_sandwich_rule");

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<byte>("can_carried_forward");

                    b.Property<byte>("certificate_require_for_min_no_of_day");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("leave_credit_id");

                    b.Property<int?>("leave_info_id");

                    b.Property<int>("maxi_negative_leave_applicable");

                    b.Property<int>("maximum_carried_forward");

                    b.Property<byte>("maximum_leave_can_be_in_day");

                    b.Property<byte>("maximum_leave_can_be_taken");

                    b.Property<byte>("maximum_leave_can_be_taken_in_quater");

                    b.Property<byte>("maximum_leave_can_be_taken_type");

                    b.Property<byte>("maximum_leave_clubbed_in_tenure_number_of_leave");

                    b.Property<int>("minimum_leave_applicable");

                    b.Property<byte>("number_maximum_negative_leave_balance");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("leave_credit_log_id");

                    b.HasIndex("leave_credit_id");

                    b.HasIndex("leave_info_id");

                    b.ToTable("tbl_leave_rule_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_type", b =>
                {
                    b.Property<int>("leave_type_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("_is_el");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("description")
                        .HasMaxLength(200);

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("leave_type_name")
                        .HasMaxLength(200);

                    b.HasKey("leave_type_id");

                    b.ToTable("tbl_leave_type");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_type_log", b =>
                {
                    b.Property<int>("leave_type_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<string>("description");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("leave_type_id");

                    b.Property<string>("leave_type_name");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("leave_type_log_id");

                    b.HasIndex("leave_type_id");

                    b.ToTable("tbl_leave_type_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_loan_approval", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("approval_order");

                    b.Property<int>("approver_role_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<byte>("is_approve");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_final_approver");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int?>("loan_req_id");

                    b.HasKey("sno");

                    b.HasIndex("emp_id");

                    b.HasIndex("loan_req_id");

                    b.ToTable("tbl_loan_approval");
                });

            modelBuilder.Entity("projContext.DB.tbl_loan_approval_setting", b =>
                {
                    b.Property<int>("Sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("approver_role_id");

                    b.Property<int>("approver_type");

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("emp_id");

                    b.Property<int>("is_active");

                    b.Property<byte>("is_final_approver");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int>("order");

                    b.HasKey("Sno");

                    b.HasIndex("approver_role_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_loan_approval_setting");
                });

            modelBuilder.Entity("projContext.DB.tbl_loan_repayments", b =>
                {
                    b.Property<int>("loan_repay_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<DateTime>("date");

                    b.Property<double>("interest_component");

                    b.Property<int>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<double>("loan_balance");

                    b.Property<int?>("loan_id");

                    b.Property<double>("principal_amount");

                    b.Property<string>("remark")
                        .HasMaxLength(200);

                    b.Property<int?>("req_emp_id");

                    b.Property<byte>("status");

                    b.HasKey("loan_repay_id");

                    b.HasIndex("loan_id");

                    b.HasIndex("req_emp_id");

                    b.ToTable("tbl_loan_repayments");
                });

            modelBuilder.Entity("projContext.DB.tbl_loan_request", b =>
                {
                    b.Property<int>("loan_req_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<string>("emp_code");

                    b.Property<decimal>("interest_rate");

                    b.Property<byte>("is_closed");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_final_approval");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<decimal>("loan_amt");

                    b.Property<string>("loan_purpose")
                        .HasMaxLength(200);

                    b.Property<int>("loan_tenure");

                    b.Property<int>("loan_type");

                    b.Property<double>("monthly_emi");

                    b.Property<int?>("req_emp_id");

                    b.Property<DateTime>("start_date");

                    b.HasKey("loan_req_id");

                    b.HasIndex("req_emp_id");

                    b.ToTable("tbl_loan_request");
                });

            modelBuilder.Entity("projContext.DB.tbl_loan_request_master", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyid");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("em_status");

                    b.Property<int>("grade_id");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_reporting_mgr_approval");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<decimal>("loan_amount");

                    b.Property<int>("loan_type");

                    b.Property<int>("max_tenure");

                    b.Property<int>("min_top_up_duration");

                    b.Property<decimal>("on_salary");

                    b.Property<decimal>("rate_of_interest");

                    b.HasKey("sno");

                    b.ToTable("tbl_loan_request_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_location_master", b =>
                {
                    b.Property<int>("location_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address_line_one")
                        .HasMaxLength(250);

                    b.Property<string>("address_line_two")
                        .HasMaxLength(250);

                    b.Property<int?>("city_id");

                    b.Property<int>("company_id");

                    b.Property<int?>("country_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("image");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("location_code")
                        .HasMaxLength(100);

                    b.Property<string>("location_name")
                        .HasMaxLength(200);

                    b.Property<int>("pin_code");

                    b.Property<string>("primary_contact_number")
                        .HasMaxLength(20);

                    b.Property<string>("primary_email_id")
                        .HasMaxLength(100);

                    b.Property<string>("secondary_contact_number")
                        .HasMaxLength(20);

                    b.Property<string>("secondary_email_id")
                        .HasMaxLength(100);

                    b.Property<int?>("state_id");

                    b.Property<byte>("type_of_location");

                    b.Property<string>("website");

                    b.HasKey("location_id");

                    b.HasIndex("city_id");

                    b.HasIndex("country_id");

                    b.HasIndex("state_id");

                    b.ToTable("tbl_location_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_location_master_log", b =>
                {
                    b.Property<int>("location_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address_line_one")
                        .HasMaxLength(250);

                    b.Property<string>("address_line_two")
                        .HasMaxLength(250);

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("city_id");

                    b.Property<int>("company_id");

                    b.Property<int?>("country_id");

                    b.Property<string>("image");

                    b.Property<byte>("is_approved");

                    b.Property<string>("location_code")
                        .HasMaxLength(100);

                    b.Property<int?>("location_id");

                    b.Property<string>("location_name")
                        .HasMaxLength(200);

                    b.Property<int>("pin_code");

                    b.Property<string>("primary_contact_number")
                        .HasMaxLength(20);

                    b.Property<string>("primary_email_id")
                        .HasMaxLength(200);

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<string>("secondary_contact_number")
                        .HasMaxLength(20);

                    b.Property<string>("secondary_email_id")
                        .HasMaxLength(200);

                    b.Property<int?>("state_id");

                    b.Property<byte>("type_of_location");

                    b.Property<string>("website");

                    b.HasKey("location_log_id");

                    b.HasIndex("city_id");

                    b.HasIndex("country_id");

                    b.HasIndex("location_id");

                    b.HasIndex("state_id");

                    b.ToTable("tbl_location_master_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_lop_detail", b =>
                {
                    b.Property<int>("lop_detail_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyid");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_active");

                    b.Property<int?>("lop_master_id");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.HasKey("lop_detail_id");

                    b.ToTable("tbl_lop_detail");
                });

            modelBuilder.Entity("projContext.DB.tbl_lossofpay_master", b =>
                {
                    b.Property<int>("lop_master_id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Absent_days");

                    b.Property<decimal>("Actual_Paid_days");

                    b.Property<decimal>("Additional_Paid_days");

                    b.Property<decimal>("Holiday_days");

                    b.Property<decimal>("Leave_days");

                    b.Property<decimal>("Present_days");

                    b.Property<decimal>("Total_Paid_days");

                    b.Property<decimal>("Week_off_days");

                    b.Property<decimal?>("acutual_lop_days");

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("emp_id");

                    b.Property<decimal?>("final_lop_days");

                    b.Property<int>("fkid_sepration");

                    b.Property<int>("is_active");

                    b.Property<int>("is_freezed");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int?>("monthyear");

                    b.Property<string>("remarks");

                    b.Property<int?>("totaldays");

                    b.HasKey("lop_master_id");

                    b.ToTable("tbl_lossofpay_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_lossofpay_setting", b =>
                {
                    b.Property<int>("lop_setting_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyid");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_active");

                    b.Property<int>("lop_setting_name");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.HasKey("lop_setting_id");

                    b.ToTable("tbl_lossofpay_setting");
                });

            modelBuilder.Entity("projContext.DB.tbl_machine_master", b =>
                {
                    b.Property<int>("machine_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("ip_address")
                        .IsRequired();

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int?>("location_id");

                    b.Property<string>("machine_description");

                    b.Property<int>("machine_number");

                    b.Property<byte>("machine_type");

                    b.Property<int>("port_number");

                    b.Property<int?>("sub_location_id");

                    b.HasKey("machine_id");

                    b.HasIndex("company_id");

                    b.HasIndex("location_id");

                    b.HasIndex("sub_location_id");

                    b.ToTable("tbl_machine_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_machine_master_log", b =>
                {
                    b.Property<int>("machine_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<string>("ip_address")
                        .IsRequired();

                    b.Property<byte>("is_approved");

                    b.Property<string>("machine_description");

                    b.Property<int?>("machine_id");

                    b.Property<int>("machine_number");

                    b.Property<int>("port_number");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("machine_log_id");

                    b.HasIndex("machine_id");

                    b.ToTable("tbl_machine_master_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_menu_master", b =>
                {
                    b.Property<int>("menu_id");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(300);

                    b.Property<int>("SortingOrder");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_active");

                    b.Property<string>("menu_name")
                        .HasMaxLength(50);

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int?>("parent_menu_id");

                    b.Property<byte>("type");

                    b.Property<string>("urll");

                    b.HasKey("menu_id");

                    b.ToTable("tbl_menu_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form1", b =>
                {
                    b.Property<int>("form_I_mstr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("amt_c_id");

                    b.Property<int>("comp_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("date_c_id");

                    b.Property<int?>("date_realised_c_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int?>("nature_and_date_c_id");

                    b.Property<int?>("rate_of_wages_c_id");

                    b.Property<int?>("remarks_c_id");

                    b.Property<int?>("whether_workman_c_id");

                    b.HasKey("form_I_mstr_id");

                    b.HasIndex("amt_c_id");

                    b.HasIndex("comp_id");

                    b.HasIndex("date_c_id");

                    b.HasIndex("date_realised_c_id");

                    b.HasIndex("nature_and_date_c_id");

                    b.HasIndex("rate_of_wages_c_id");

                    b.HasIndex("remarks_c_id");

                    b.HasIndex("whether_workman_c_id");

                    b.ToTable("tbl_muster_form1");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form10", b =>
                {
                    b.Property<int>("form_X_mstr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("basic_min_rate_pay_c_id");

                    b.Property<int?>("basic_wages_actually_pay_c_id");

                    b.Property<int>("comp_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("da_min_rate_pay_c_id");

                    b.Property<int?>("da_wages_actually_pay_c_id");

                    b.Property<int?>("date_ofpayment_c_id");

                    b.Property<int?>("employers_pf_c_id");

                    b.Property<int?>("gross_wages_pay_c_id");

                    b.Property<int?>("hr_deduction_c_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int?>("other_deduction_c_id");

                    b.Property<int?>("overtime_worked_c_id");

                    b.Property<int?>("total_attan_orunit_ofworkdone_c_id");

                    b.Property<int?>("total_deduction_c_id");

                    b.Property<int?>("wages_paid_c_id");

                    b.HasKey("form_X_mstr_id");

                    b.HasIndex("basic_min_rate_pay_c_id");

                    b.HasIndex("basic_wages_actually_pay_c_id");

                    b.HasIndex("comp_id");

                    b.HasIndex("da_min_rate_pay_c_id");

                    b.HasIndex("da_wages_actually_pay_c_id");

                    b.HasIndex("date_ofpayment_c_id");

                    b.HasIndex("employers_pf_c_id");

                    b.HasIndex("gross_wages_pay_c_id");

                    b.HasIndex("hr_deduction_c_id");

                    b.HasIndex("other_deduction_c_id");

                    b.HasIndex("overtime_worked_c_id");

                    b.HasIndex("total_attan_orunit_ofworkdone_c_id");

                    b.HasIndex("total_deduction_c_id");

                    b.HasIndex("wages_paid_c_id");

                    b.ToTable("tbl_muster_form10");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form10_data", b =>
                {
                    b.Property<int>("form_x_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("basic_minimum_payable")
                        .HasMaxLength(50);

                    b.Property<string>("basic_wages_actually_pay")
                        .HasMaxLength(50);

                    b.Property<int?>("company_id");

                    b.Property<string>("contri_of_employer_pf")
                        .HasMaxLength(50);

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("da_minimum_payable")
                        .HasMaxLength(50);

                    b.Property<string>("da_wages_actually_pay")
                        .HasMaxLength(50);

                    b.Property<string>("date_of_payment")
                        .HasMaxLength(50);

                    b.Property<string>("designation");

                    b.Property<int?>("emp_id");

                    b.Property<string>("emp_sign_orthump_exp");

                    b.Property<string>("employee_code");

                    b.Property<string>("employee_name")
                        .HasMaxLength(150);

                    b.Property<string>("father_or_husband_name")
                        .HasMaxLength(150);

                    b.Property<string>("gross_wages_pay")
                        .HasMaxLength(50);

                    b.Property<string>("hr_deduction")
                        .HasMaxLength(50);

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("other_deduction")
                        .HasMaxLength(50);

                    b.Property<string>("overtime_worked")
                        .HasMaxLength(50);

                    b.Property<int>("payroll_month");

                    b.Property<string>("total_attand_or_unitof_work_done")
                        .HasMaxLength(50);

                    b.Property<string>("total_deduction")
                        .HasMaxLength(50);

                    b.Property<string>("wages_paid")
                        .HasMaxLength(50);

                    b.HasKey("form_x_id");

                    b.HasIndex("company_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_muster_form10_data");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form11", b =>
                {
                    b.Property<int>("form_XI_mstr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("basic_wages_pay_c_id");

                    b.Property<int>("comp_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("da_wages_pay_c_id");

                    b.Property<int?>("gross_wages_pay_c_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int?>("net_wages_pay_c_id");

                    b.Property<int?>("overtime_wages_c_id");

                    b.Property<int?>("pay_incharge_c_id");

                    b.Property<int?>("total_attand_orwork_done_c_id");

                    b.Property<int?>("total_deduction_c_id");

                    b.HasKey("form_XI_mstr_id");

                    b.HasIndex("basic_wages_pay_c_id");

                    b.HasIndex("comp_id");

                    b.HasIndex("da_wages_pay_c_id");

                    b.HasIndex("gross_wages_pay_c_id");

                    b.HasIndex("net_wages_pay_c_id");

                    b.HasIndex("overtime_wages_c_id");

                    b.HasIndex("pay_incharge_c_id");

                    b.HasIndex("total_attand_orwork_done_c_id");

                    b.HasIndex("total_deduction_c_id");

                    b.ToTable("tbl_muster_form11");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form11_data", b =>
                {
                    b.Property<int>("form_xi_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("basic_wage_payable")
                        .HasMaxLength(50);

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("da_wage_payable")
                        .HasMaxLength(50);

                    b.Property<string>("designation");

                    b.Property<int?>("emp_id");

                    b.Property<string>("emp_sign_orthump_exp");

                    b.Property<string>("employee_code");

                    b.Property<string>("employee_name")
                        .HasMaxLength(150);

                    b.Property<string>("father_or_husband_name")
                        .HasMaxLength(150);

                    b.Property<string>("gross_wage_pay")
                        .HasMaxLength(50);

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("net_wage_pay")
                        .HasMaxLength(50);

                    b.Property<string>("overtime_wages")
                        .HasMaxLength(50);

                    b.Property<string>("pay_incharge")
                        .HasMaxLength(50);

                    b.Property<int>("payroll_month");

                    b.Property<string>("total_attand_orwork_done")
                        .HasMaxLength(50);

                    b.Property<string>("total_deduction")
                        .HasMaxLength(50);

                    b.HasKey("form_xi_id");

                    b.HasIndex("company_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_muster_form11_data");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form1_data", b =>
                {
                    b.Property<int>("form_i_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("amt_of_fine_imposed")
                        .HasMaxLength(50);

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("date_of_fine_imposed")
                        .HasMaxLength(50);

                    b.Property<string>("date_realised")
                        .HasMaxLength(50);

                    b.Property<string>("department");

                    b.Property<int?>("emp_id");

                    b.Property<string>("employee_code");

                    b.Property<string>("employee_name")
                        .HasMaxLength(150);

                    b.Property<string>("father_or_husband_name")
                        .HasMaxLength(150);

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("nature_and_date")
                        .HasMaxLength(100);

                    b.Property<int>("payroll_month");

                    b.Property<string>("rate_of_wages")
                        .HasMaxLength(50);

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.Property<string>("whether_workman")
                        .HasMaxLength(100);

                    b.HasKey("form_i_id");

                    b.HasIndex("company_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_muster_form1_data");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form2", b =>
                {
                    b.Property<int>("form_II_mstr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("amt_ofdeduc_c_id");

                    b.Property<int>("comp_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("damage_orloss_and_date_c_id");

                    b.Property<int?>("date_ofdeduc_c_id");

                    b.Property<int?>("date_realised_c_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int?>("no_of_installment_c_id");

                    b.Property<int?>("remarks_c_id");

                    b.Property<int?>("whether_workman_c_id");

                    b.HasKey("form_II_mstr_id");

                    b.HasIndex("amt_ofdeduc_c_id");

                    b.HasIndex("comp_id");

                    b.HasIndex("damage_orloss_and_date_c_id");

                    b.HasIndex("date_ofdeduc_c_id");

                    b.HasIndex("date_realised_c_id");

                    b.HasIndex("no_of_installment_c_id");

                    b.HasIndex("remarks_c_id");

                    b.HasIndex("whether_workman_c_id");

                    b.ToTable("tbl_muster_form2");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form2_data", b =>
                {
                    b.Property<int>("form_ii_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("amt_of_deduc_imposed")
                        .HasMaxLength(50);

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("damage_orloss_and_date")
                        .HasMaxLength(100);

                    b.Property<string>("date_of_deduc_imposed")
                        .HasMaxLength(50);

                    b.Property<string>("date_realised")
                        .HasMaxLength(10);

                    b.Property<string>("department");

                    b.Property<int?>("emp_id");

                    b.Property<string>("employee_code");

                    b.Property<string>("employee_name")
                        .HasMaxLength(150);

                    b.Property<string>("father_or_husband_name")
                        .HasMaxLength(150);

                    b.Property<string>("gender");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("no_of_installment")
                        .HasMaxLength(10);

                    b.Property<int>("payroll_month");

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.Property<string>("whether_workman")
                        .HasMaxLength(100);

                    b.HasKey("form_ii_id");

                    b.HasIndex("company_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_muster_form2_data");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form3", b =>
                {
                    b.Property<int>("form_III_mstr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("advance_amt_c_id");

                    b.Property<int?>("advance_date_c_id");

                    b.Property<int>("comp_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("date_total_repaid_c_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int?>("no_of_installment_c_id");

                    b.Property<int?>("postponement_granted_c_id");

                    b.Property<int?>("purpose_c_id");

                    b.Property<int?>("remarks_c_id");

                    b.HasKey("form_III_mstr_id");

                    b.HasIndex("advance_amt_c_id");

                    b.HasIndex("advance_date_c_id");

                    b.HasIndex("comp_id");

                    b.HasIndex("date_total_repaid_c_id");

                    b.HasIndex("no_of_installment_c_id");

                    b.HasIndex("postponement_granted_c_id");

                    b.HasIndex("purpose_c_id");

                    b.HasIndex("remarks_c_id");

                    b.ToTable("tbl_muster_form3");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form3_data", b =>
                {
                    b.Property<int>("form_iii_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("advance_amount")
                        .HasMaxLength(100);

                    b.Property<string>("advance_date")
                        .HasMaxLength(50);

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("date_of_repaid")
                        .HasMaxLength(50);

                    b.Property<string>("department");

                    b.Property<int?>("emp_id");

                    b.Property<string>("employee_code");

                    b.Property<string>("employee_name")
                        .HasMaxLength(150);

                    b.Property<string>("father_or_husband_name")
                        .HasMaxLength(150);

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("no_of_installment")
                        .HasMaxLength(10);

                    b.Property<int>("payroll_month");

                    b.Property<string>("postponse_granted")
                        .HasMaxLength(50);

                    b.Property<string>("purpose")
                        .HasMaxLength(200);

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.HasKey("form_iii_id");

                    b.HasIndex("company_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_muster_form3_data");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form4", b =>
                {
                    b.Property<int>("form_IV_mstr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("comp_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("date_ofpayment_c_id");

                    b.Property<int?>("dop_component_mstrcomponent_id");

                    b.Property<int?>("extent_overtime_c_id");

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int?>("normal_earning_c_id");

                    b.Property<int?>("normal_hr_c_id");

                    b.Property<int?>("normal_rate_c_id");

                    b.Property<int?>("overtime_date_c_id");

                    b.Property<int?>("overtime_earning_c_id");

                    b.Property<int?>("overtime_rate_c_id");

                    b.Property<int?>("total_earning_c_id");

                    b.Property<int?>("total_overtime_c_id");

                    b.HasKey("form_IV_mstr_id");

                    b.HasIndex("comp_id");

                    b.HasIndex("dop_component_mstrcomponent_id");

                    b.HasIndex("extent_overtime_c_id");

                    b.HasIndex("normal_earning_c_id");

                    b.HasIndex("normal_hr_c_id");

                    b.HasIndex("normal_rate_c_id");

                    b.HasIndex("overtime_date_c_id");

                    b.HasIndex("overtime_earning_c_id");

                    b.HasIndex("overtime_rate_c_id");

                    b.HasIndex("total_earning_c_id");

                    b.HasIndex("total_overtime_c_id");

                    b.ToTable("tbl_muster_form4");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form4_data", b =>
                {
                    b.Property<int>("form_iv_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("date_ofpayment")
                        .HasMaxLength(50);

                    b.Property<string>("department");

                    b.Property<string>("designation");

                    b.Property<int?>("emp_id");

                    b.Property<string>("employee_code");

                    b.Property<string>("employee_name")
                        .HasMaxLength(150);

                    b.Property<string>("extent_overtime")
                        .HasMaxLength(50);

                    b.Property<string>("father_or_husband_name")
                        .HasMaxLength(150);

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("normal_earning")
                        .HasMaxLength(50);

                    b.Property<string>("normal_hr")
                        .HasMaxLength(50);

                    b.Property<string>("normal_rate")
                        .HasMaxLength(50);

                    b.Property<string>("overtime_earning")
                        .HasMaxLength(50);

                    b.Property<string>("overtime_rate")
                        .HasMaxLength(50);

                    b.Property<string>("overtime_work_dt")
                        .HasMaxLength(50);

                    b.Property<int>("payroll_month");

                    b.Property<string>("sex")
                        .HasMaxLength(10);

                    b.Property<string>("total_earning")
                        .HasMaxLength(50);

                    b.Property<string>("total_overtime_worked")
                        .HasMaxLength(50);

                    b.HasKey("form_iv_id");

                    b.HasIndex("company_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_muster_form4_data");
                });

            modelBuilder.Entity("projContext.DB.tbl_ot_master", b =>
                {
                    b.Property<int>("ot_id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Total_ot_amount_earned");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<int>("is_active");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<decimal>("normal_rate_per_hour");

                    b.Property<DateTime>("ot_date");

                    b.Property<decimal>("ot_hours_worked");

                    b.Property<DateTime>("ot_paid_date");

                    b.Property<decimal>("ot_rate_per_hour");

                    b.Property<int>("ot_type");

                    b.Property<string>("remarks");

                    b.HasKey("ot_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_ot_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_ot_rate_details", b =>
                {
                    b.Property<int>("ot_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("companyid");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<int?>("grade_id");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<double>("ot_amt");

                    b.HasKey("ot_id");

                    b.HasIndex("emp_id");

                    b.HasIndex("grade_id");

                    b.ToTable("tbl_ot_rate_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_ot_rule_master", b =>
                {
                    b.Property<int>("ot_rule_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("grace_working_hour")
                        .HasMaxLength(200);

                    b.Property<int>("grace_working_minute");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("ot_rule_id");

                    b.ToTable("tbl_ot_rule_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_ot_rule_master_log", b =>
                {
                    b.Property<int>("ot_rule_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int>("grace_working_hour")
                        .HasMaxLength(200);

                    b.Property<int>("grace_working_minute");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("ot_rule_id");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("ot_rule_log_id");

                    b.HasIndex("ot_rule_id");

                    b.ToTable("tbl_ot_rule_master_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_outdoor_request", b =>
                {
                    b.Property<int>("leave_request_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("a1_e_id");

                    b.Property<int?>("a2_e_id");

                    b.Property<int?>("a3_e_id");

                    b.Property<DateTime>("admin_ar_date");

                    b.Property<int?>("admin_id");

                    b.Property<string>("admin_remarks");

                    b.Property<string>("approval1_remarks")
                        .HasMaxLength(200);

                    b.Property<string>("approval2_remarks")
                        .HasMaxLength(200);

                    b.Property<string>("approval3_remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("approval_date1");

                    b.Property<DateTime>("approval_date2");

                    b.Property<DateTime>("approval_date3");

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("creted_dt");

                    b.Property<int>("deleted_by");

                    b.Property<DateTime>("deleted_dt");

                    b.Property<string>("deleted_remarks")
                        .HasMaxLength(200);

                    b.Property<DateTime>("from_date");

                    b.Property<int>("is_admin_approve");

                    b.Property<byte>("is_approved1");

                    b.Property<byte>("is_approved2");

                    b.Property<byte>("is_approved3");

                    b.Property<int>("is_auto");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_final_approve");

                    b.Property<string>("latitude");

                    b.Property<string>("location");

                    b.Property<string>("longitude");

                    b.Property<DateTime>("manual_in_time");

                    b.Property<DateTime>("manual_out_time");

                    b.Property<int?>("r_e_id");

                    b.Property<DateTime>("requester_date");

                    b.Property<string>("requester_remarks")
                        .HasMaxLength(500);

                    b.Property<DateTime>("system_in_time");

                    b.Property<DateTime>("system_out_time");

                    b.HasKey("leave_request_id");

                    b.HasIndex("a1_e_id");

                    b.HasIndex("a2_e_id");

                    b.HasIndex("a3_e_id");

                    b.HasIndex("admin_id");

                    b.HasIndex("company_id");

                    b.HasIndex("r_e_id");

                    b.ToTable("tbl_outdoor_request");
                });

            modelBuilder.Entity("projContext.DB.tbl_pay_set_log", b =>
                {
                    b.Property<int>("payroll_month_setting_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("applicable_from_date");

                    b.Property<int>("applicable_to_date");

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int>("from_date");

                    b.Property<int>("from_month")
                        .HasMaxLength(200);

                    b.Property<byte>("is_approved");

                    b.Property<int?>("pay_set_id");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("payroll_month_setting_log_id");

                    b.HasIndex("pay_set_id");

                    b.ToTable("tbl_pay_set_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_payroll_month_setting", b =>
                {
                    b.Property<int>("payroll_month_setting_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("applicable_from_date");

                    b.Property<int>("applicable_to_date");

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("from_date");

                    b.Property<int>("from_month");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.HasKey("payroll_month_setting_id");

                    b.ToTable("tbl_payroll_month_setting");
                });

            modelBuilder.Entity("projContext.DB.tbl_payroll_process_status", b =>
                {
                    b.Property<int>("pay_pro_status_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("emp_id");

                    b.Property<byte>("is_calculated");

                    b.Property<byte>("is_deleted");

                    b.Property<byte>("is_freezed");

                    b.Property<byte>("is_lock");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int>("payroll_month_year");

                    b.Property<byte>("payroll_status");

                    b.Property<string>("payslip_path");

                    b.HasKey("pay_pro_status_id");

                    b.HasIndex("company_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_payroll_process_status");
                });

            modelBuilder.Entity("projContext.DB.tbl_policy_master", b =>
                {
                    b.Property<int>("pkid_policy")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("policy_name");

                    b.Property<string>("remarks");

                    b.HasKey("pkid_policy");

                    b.ToTable("tbl_policy_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_policy_master_documents", b =>
                {
                    b.Property<int>("pkid_tpmDoc")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("document_path");

                    b.Property<int>("fkid_policy");

                    b.Property<int>("is_active");

                    b.HasKey("pkid_tpmDoc");

                    b.ToTable("tbl_policy_master_documents");
                });

            modelBuilder.Entity("projContext.DB.tbl_question_master", b =>
                {
                    b.Property<int>("ques_mstr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ans_type");

                    b.Property<string>("ans_type_ddl")
                        .HasMaxLength(300);

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("deleted_by");

                    b.Property<string>("description")
                        .HasMaxLength(1000);

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("ques")
                        .HasMaxLength(1000);

                    b.Property<int>("ques_display_order");

                    b.Property<int?>("tab_id");

                    b.Property<int?>("wrk_role_id");

                    b.HasKey("ques_mstr_id");

                    b.HasIndex("company_id");

                    b.HasIndex("tab_id");

                    b.HasIndex("wrk_role_id");

                    b.ToTable("tbl_question_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_religion_master", b =>
                {
                    b.Property<int>("religion_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("religion_name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("religion_id");

                    b.ToTable("tbl_religion_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_religion_master_log", b =>
                {
                    b.Property<int>("religion_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("religion_id");

                    b.Property<string>("religion_name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.HasKey("religion_log_id");

                    b.HasIndex("religion_id");

                    b.ToTable("tbl_religion_master_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_remimb_cat_mstr", b =>
                {
                    b.Property<int>("rcm_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("is_active");

                    b.Property<int>("is_delete");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<string>("reimbursement_category_name")
                        .HasMaxLength(50);

                    b.HasKey("rcm_id");

                    b.ToTable("tbl_remimb_cat_mstr");
                });

            modelBuilder.Entity("projContext.DB.tbl_report_master", b =>
                {
                    b.Property<int>("rpt_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("rpt_description")
                        .HasMaxLength(200);

                    b.Property<string>("rpt_name")
                        .HasMaxLength(200);

                    b.HasKey("rpt_id");

                    b.ToTable("tbl_report_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_right_menu_link", b =>
                {
                    b.Property<int>("menu_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<string>("icon_url")
                        .HasMaxLength(20);

                    b.Property<int>("is_active");

                    b.Property<string>("menu_name")
                        .HasMaxLength(50);

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int>("sorting_order");

                    b.Property<string>("url");

                    b.HasKey("menu_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_right_menu_link");
                });

            modelBuilder.Entity("projContext.DB.tbl_rimb_cat_lmt_mstr", b =>
                {
                    b.Property<int>("rclm_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("is_active");

                    b.Property<int>("is_delete");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<double>("monthly_limit");

                    b.Property<int?>("rcm_id");

                    b.Property<int?>("rglm_id");

                    b.Property<double>("yearly_limit");

                    b.HasKey("rclm_id");

                    b.HasIndex("rcm_id");

                    b.HasIndex("rglm_id");

                    b.ToTable("tbl_rimb_cat_lmt_mstr");
                });

            modelBuilder.Entity("projContext.DB.tbl_rimb_grd_lmt_mstr", b =>
                {
                    b.Property<int>("rglm_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<string>("fiscal_year_id");

                    b.Property<int?>("grade_id");

                    b.Property<int>("is_active");

                    b.Property<int>("is_delete");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<double>("monthly_limit");

                    b.Property<double>("yearly_limit");

                    b.HasKey("rglm_id");

                    b.HasIndex("emp_id");

                    b.HasIndex("grade_id");

                    b.ToTable("tbl_rimb_grd_lmt_mstr");
                });

            modelBuilder.Entity("projContext.DB.tbl_rimb_req_details", b =>
                {
                    b.Property<int>("rrd_id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Bill_amount");

                    b.Property<DateTime>("Bill_date");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("is_active");

                    b.Property<int>("is_delete");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int?>("rclm_id");

                    b.Property<double>("request_amount");

                    b.Property<int?>("rrm_id");

                    b.HasKey("rrd_id");

                    b.HasIndex("rclm_id");

                    b.HasIndex("rrm_id");

                    b.ToTable("tbl_rimb_req_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_rimb_req_mstr", b =>
                {
                    b.Property<int>("rrm_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<string>("fiscal_year_id");

                    b.Property<int>("is_active");

                    b.Property<int>("is_approvred");

                    b.Property<int>("is_delete");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<string>("remarks")
                        .HasMaxLength(200);

                    b.Property<int>("request_month_year");

                    b.Property<int>("request_type");

                    b.Property<double>("total_request_amount");

                    b.HasKey("rrm_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_rimb_req_mstr");
                });

            modelBuilder.Entity("projContext.DB.tbl_role_claim_map", b =>
                {
                    b.Property<int>("claim_master_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DocumentMaster");

                    b.Property<byte>("PermissionType");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int?>("role_id");

                    b.HasKey("claim_master_id");

                    b.HasIndex("role_id");

                    b.ToTable("tbl_role_claim_map");
                });

            modelBuilder.Entity("projContext.DB.tbl_role_master", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("role_name")
                        .HasMaxLength(64);

                    b.HasKey("role_id");

                    b.ToTable("tbl_role_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_role_menu_master", b =>
                {
                    b.Property<int>("role_menu_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("menu_id");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int>("role_id");

                    b.HasKey("role_menu_id");

                    b.ToTable("tbl_role_menu_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_rpt_title_master", b =>
                {
                    b.Property<int>("title_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("component_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("display_order");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int>("payroll_report_property");

                    b.Property<int>("rpt_id");

                    b.Property<string>("rpt_title")
                        .HasMaxLength(200);

                    b.HasKey("title_id");

                    b.HasIndex("component_id");

                    b.HasIndex("rpt_id");

                    b.ToTable("tbl_rpt_title_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_salary_group", b =>
                {
                    b.Property<int>("group_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<int?>("grade_Id");

                    b.Property<string>("group_name")
                        .HasMaxLength(200);

                    b.Property<int>("is_active");

                    b.Property<double>("maxvalue");

                    b.Property<double>("minvalue");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.HasKey("group_id");

                    b.HasIndex("grade_Id");

                    b.ToTable("tbl_salary_group");
                });

            modelBuilder.Entity("projContext.DB.tbl_salary_input", b =>
                {
                    b.Property<int>("salary_input_id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("arrear_value");

                    b.Property<int?>("company_id");

                    b.Property<int?>("component_id");

                    b.Property<int>("component_type");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<double>("current_month_value");

                    b.Property<int?>("emp_id");

                    b.Property<int>("is_active");

                    b.Property<int>("is_fnf_comp");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int>("monthyear");

                    b.Property<double>("rate");

                    b.Property<string>("values");

                    b.HasKey("salary_input_id");

                    b.HasIndex("company_id");

                    b.HasIndex("component_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_salary_input");
                });

            modelBuilder.Entity("projContext.DB.tbl_salary_input_change", b =>
                {
                    b.Property<int>("salary_input_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int?>("component_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<int>("is_active");

                    b.Property<int>("is_fnf_comp");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<string>("monthyear");

                    b.Property<string>("previousvalues");

                    b.Property<string>("values");

                    b.HasKey("salary_input_id");

                    b.HasIndex("company_id");

                    b.HasIndex("component_id");

                    b.HasIndex("emp_id");

                    b.ToTable("tbl_salary_input_change");
                });

            modelBuilder.Entity("projContext.DB.tbl_scheduler_details", b =>
                {
                    b.Property<int>("scheduler_detail_id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("is_deleted");

                    b.Property<DateTime?>("last_runing_date");

                    b.Property<int?>("scheduler_id");

                    b.Property<int?>("transaction_no");

                    b.HasKey("scheduler_detail_id");

                    b.HasIndex("scheduler_id");

                    b.ToTable("tbl_scheduler_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_scheduler_master", b =>
                {
                    b.Property<int>("scheduler_id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("is_deleted");

                    b.Property<DateTime?>("last_runing_date");

                    b.Property<int>("schduler_type");

                    b.Property<string>("scheduler_name");

                    b.HasKey("scheduler_id");

                    b.ToTable("tbl_scheduler_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_sg_maping", b =>
                {
                    b.Property<int>("map_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("applicable_from_dt");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int?>("emp_id");

                    b.Property<int>("is_active");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int?>("salary_group_id");

                    b.HasKey("map_id");

                    b.HasIndex("emp_id");

                    b.HasIndex("salary_group_id");

                    b.ToTable("tbl_sg_maping");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_department", b =>
                {
                    b.Property<int>("shift_department_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("dept_id");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("shift_detail_id");

                    b.HasKey("shift_department_id");

                    b.HasIndex("dept_id");

                    b.HasIndex("shift_detail_id");

                    b.ToTable("tbl_shift_department");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_details", b =>
                {
                    b.Property<int>("shift_details_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<DateTime>("grace_time_for_late_punch");

                    b.Property<int>("is_deleted");

                    b.Property<byte>("is_lunch_punch_applicable");

                    b.Property<byte>("is_night_shift");

                    b.Property<byte>("is_ot_applicable");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<DateTime>("lunch_punch_in_time");

                    b.Property<DateTime>("lunch_punch_out_time");

                    b.Property<DateTime>("maximum_lunch_time");

                    b.Property<DateTime>("maximum_ot_hours");

                    b.Property<DateTime>("maximum_tea_time_one");

                    b.Property<DateTime>("maximum_tea_time_two");

                    b.Property<byte>("maximum_working_hours");

                    b.Property<byte>("maximum_working_minute");

                    b.Property<DateTime>("min_halfday_working_hour");

                    b.Property<int>("number_of_grace_time_applicable_in_month");

                    b.Property<DateTime>("punch_in_max_time");

                    b.Property<DateTime>("punch_in_time");

                    b.Property<DateTime>("punch_out_time");

                    b.Property<byte>("shift_for_all_company");

                    b.Property<byte>("shift_for_all_department");

                    b.Property<byte>("shift_for_all_location");

                    b.Property<int?>("shift_id");

                    b.Property<string>("shift_name")
                        .HasMaxLength(50);

                    b.Property<string>("shift_short_name")
                        .HasMaxLength(20);

                    b.Property<byte>("shift_type");

                    b.Property<int>("tea_punch_applicable_one");

                    b.Property<int>("tea_punch_applicable_two");

                    b.Property<DateTime>("tea_punch_in_time_one");

                    b.Property<DateTime>("tea_punch_in_time_two");

                    b.Property<DateTime>("tea_punch_out_time_one");

                    b.Property<DateTime>("tea_punch_out_time_two");

                    b.Property<int>("weekly_off");

                    b.HasKey("shift_details_id");

                    b.HasIndex("shift_id");

                    b.ToTable("tbl_shift_details");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_location", b =>
                {
                    b.Property<int>("shift_location_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<byte>("is_deleted");

                    b.Property<int?>("location_id");

                    b.Property<int?>("shift_detail_id");

                    b.HasKey("shift_location_id");

                    b.HasIndex("company_id");

                    b.HasIndex("location_id");

                    b.HasIndex("shift_detail_id");

                    b.ToTable("tbl_shift_location");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_master", b =>
                {
                    b.Property<int>("shift_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_active");

                    b.Property<byte>("is_default");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("shift_code")
                        .HasMaxLength(100);

                    b.HasKey("shift_id");

                    b.ToTable("tbl_shift_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_master_log", b =>
                {
                    b.Property<int>("shift_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<DateTime>("grace_time_for_late_punch_in");

                    b.Property<DateTime>("grace_time_for_late_punch_out");

                    b.Property<byte>("is_approved");

                    b.Property<byte>("is_lunch_punch_applicable");

                    b.Property<byte>("is_night_shift");

                    b.Property<byte>("is_ot_applicable");

                    b.Property<int?>("location_id");

                    b.Property<DateTime>("lunch_punch_in_time");

                    b.Property<DateTime>("lunch_punch_out_time");

                    b.Property<DateTime>("mark_as_half_day_for_working_hours_less_than");

                    b.Property<DateTime>("maximum_lunch_time");

                    b.Property<DateTime>("maximum_ot_hours");

                    b.Property<DateTime>("maximum_tea_time_one");

                    b.Property<DateTime>("maximum_tea_time_two");

                    b.Property<byte>("maximum_working_hours");

                    b.Property<byte>("maximum_working_minute");

                    b.Property<int>("number_of_grace_time_applicable_in_month");

                    b.Property<DateTime>("punch_in_time");

                    b.Property<DateTime>("punch_out_time");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<string>("shift_code")
                        .HasMaxLength(100);

                    b.Property<int?>("shift_id");

                    b.Property<string>("shift_name")
                        .HasMaxLength(50);

                    b.Property<string>("shift_short_name")
                        .HasMaxLength(20);

                    b.Property<int>("tea_punch_applicable_one");

                    b.Property<int>("tea_punch_applicable_two");

                    b.Property<DateTime>("tea_punch_in_time_one");

                    b.Property<DateTime>("tea_punch_in_time_two");

                    b.Property<DateTime>("tea_punch_out_time_one");

                    b.Property<DateTime>("tea_punch_out_time_two");

                    b.Property<int>("weekly_off");

                    b.HasKey("shift_log_id");

                    b.HasIndex("location_id");

                    b.HasIndex("shift_id");

                    b.ToTable("tbl_shift_master_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_roster_master", b =>
                {
                    b.Property<int>("shift_roster_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("applicable_from_date");

                    b.Property<DateTime>("applicable_to_date");

                    b.Property<int?>("emp_id");

                    b.Property<int?>("shft_id1");

                    b.Property<int?>("shft_id2");

                    b.Property<int?>("shft_id3");

                    b.Property<int?>("shft_id4");

                    b.Property<int?>("shft_id5");

                    b.Property<int>("shift_rotat_in_day");

                    b.HasKey("shift_roster_id");

                    b.HasIndex("emp_id");

                    b.HasIndex("shft_id1");

                    b.HasIndex("shft_id2");

                    b.HasIndex("shft_id3");

                    b.HasIndex("shft_id4");

                    b.HasIndex("shft_id5");

                    b.ToTable("tbl_shift_roster_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_roster_master_log", b =>
                {
                    b.Property<int>("shift_roster_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("applicable_from_date");

                    b.Property<DateTime>("applicable_to_date");

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int?>("emp_id");

                    b.Property<byte>("is_approved");

                    b.Property<int?>("r_id");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<int?>("shift_id1");

                    b.Property<int?>("shift_id2");

                    b.Property<int?>("shift_id3");

                    b.Property<int?>("shift_id4");

                    b.Property<int?>("shift_id5");

                    b.Property<int>("shift_rotat_in_day");

                    b.HasKey("shift_roster_log_id");

                    b.HasIndex("emp_id");

                    b.HasIndex("r_id");

                    b.HasIndex("shift_id1");

                    b.HasIndex("shift_id2");

                    b.HasIndex("shift_id3");

                    b.HasIndex("shift_id4");

                    b.HasIndex("shift_id5");

                    b.ToTable("tbl_shift_roster_master_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_week_off", b =>
                {
                    b.Property<int>("shift_week_off_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<byte>("days");

                    b.Property<int?>("emp_id");

                    b.Property<int?>("emp_weekoff_id");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int?>("shift_detail_id");

                    b.Property<byte>("week_day");

                    b.HasKey("shift_week_off_id");

                    b.HasIndex("emp_id");

                    b.HasIndex("emp_weekoff_id");

                    b.HasIndex("shift_detail_id");

                    b.ToTable("tbl_shift_week_off");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_week_off_log", b =>
                {
                    b.Property<int>("shift_week_off_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<byte>("days");

                    b.Property<int?>("emp_id");

                    b.Property<byte>("is_approved");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<int?>("shift_id");

                    b.Property<int?>("shift_week_off_id");

                    b.Property<byte>("week_day");

                    b.HasKey("shift_week_off_log_id");

                    b.HasIndex("emp_id");

                    b.HasIndex("shift_id");

                    b.HasIndex("shift_week_off_id");

                    b.ToTable("tbl_shift_week_off_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_state", b =>
                {
                    b.Property<int>("state_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("country_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("name")
                        .HasMaxLength(200);

                    b.HasKey("state_id");

                    b.HasIndex("country_id");

                    b.ToTable("tbl_state");
                });

            modelBuilder.Entity("projContext.DB.tbl_status_flow_master", b =>
                {
                    b.Property<int>("flow_mster_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("deleted_by");

                    b.Property<string>("description")
                        .HasMaxLength(500);

                    b.Property<int>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<int>("next_status_id");

                    b.Property<int>("start_status_id");

                    b.HasKey("flow_mster_id");

                    b.HasIndex("next_status_id");

                    b.HasIndex("start_status_id");

                    b.ToTable("tbl_status_flow_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_sub_department_master", b =>
                {
                    b.Property<int>("sub_department_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("department_id");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("sub_department_code")
                        .HasMaxLength(100);

                    b.Property<string>("sub_department_name")
                        .HasMaxLength(200);

                    b.HasKey("sub_department_id");

                    b.HasIndex("department_id");

                    b.ToTable("tbl_sub_department_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_sub_department_master_log", b =>
                {
                    b.Property<int>("sub_department_log_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("approved_by");

                    b.Property<DateTime>("approved_date");

                    b.Property<int>("company_id");

                    b.Property<int?>("d_id");

                    b.Property<byte>("is_approved");

                    b.Property<int>("requested_by");

                    b.Property<DateTime>("requested_date");

                    b.Property<byte>("requested_type");

                    b.Property<int?>("sid");

                    b.Property<string>("sub_department_code")
                        .HasMaxLength(100);

                    b.Property<string>("sub_department_name")
                        .HasMaxLength(200);

                    b.HasKey("sub_department_log_id");

                    b.HasIndex("d_id");

                    b.HasIndex("sid");

                    b.ToTable("tbl_sub_department_master_log");
                });

            modelBuilder.Entity("projContext.DB.tbl_sub_location_master", b =>
                {
                    b.Property<int>("sub_location_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_active");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int?>("location_id");

                    b.Property<string>("location_name")
                        .HasMaxLength(200);

                    b.HasKey("sub_location_id");

                    b.HasIndex("location_id");

                    b.ToTable("tbl_sub_location_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_tab_master", b =>
                {
                    b.Property<int>("tab_mstr_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<int>("deleted_by");

                    b.Property<string>("description")
                        .HasMaxLength(1000);

                    b.Property<int>("display_order");

                    b.Property<byte>("for_rm1");

                    b.Property<byte>("for_rm2");

                    b.Property<byte>("for_rm3");

                    b.Property<byte>("for_user");

                    b.Property<byte>("is_deleted");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_date");

                    b.Property<string>("tab_name")
                        .HasMaxLength(500);

                    b.HasKey("tab_mstr_id");

                    b.HasIndex("company_id");

                    b.ToTable("tbl_tab_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_tax_slab_Details", b =>
                {
                    b.Property<int>("sno")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Exemption");

                    b.Property<string>("OtherTaxName");

                    b.Property<decimal>("OtherTaxPercentage");

                    b.Property<decimal>("Surcharge_percentage");

                    b.Property<decimal>("TaxPercentage");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<string>("gender");

                    b.Property<int>("is_active");

                    b.Property<int>("max_value");

                    b.Property<int>("min_value");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.Property<int?>("tax_slab_id");

                    b.HasKey("sno");

                    b.HasIndex("tax_slab_id");

                    b.ToTable("tbl_tax_slab_Details");
                });

            modelBuilder.Entity("projContext.DB.tbl_tax_slab_master", b =>
                {
                    b.Property<int>("tax_slab_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_dt");

                    b.Property<string>("gender");

                    b.Property<int>("is_active");

                    b.Property<int>("max_age");

                    b.Property<int>("min_age");

                    b.Property<int>("modified_by");

                    b.Property<DateTime>("modified_dt");

                    b.HasKey("tax_slab_id");

                    b.ToTable("tbl_tax_slab_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_user_master", b =>
                {
                    b.Property<ulong>("user_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<ulong?>("DistributorId");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<byte>("LoginFailCount");

                    b.Property<DateTime>("LoginFailCountdt");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(16);

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("employee_id");

                    b.Property<int>("is_active");

                    b.Property<byte>("is_logged_blocked");

                    b.Property<byte>("is_logged_in");

                    b.Property<DateTime>("last_logged_dt");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<DateTime>("logged_blocked_Enddt");

                    b.Property<DateTime>("logged_blocked_dt");

                    b.Property<string>("password")
                        .HasMaxLength(512);

                    b.Property<int>("user_type");

                    b.Property<string>("username")
                        .HasMaxLength(64);

                    b.HasKey("user_id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DistributorId");

                    b.HasIndex("employee_id");

                    b.ToTable("tbl_user_master");
                });

            modelBuilder.Entity("projContext.DB.tbl_user_role_map", b =>
                {
                    b.Property<int>("claim_master_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int>("is_deleted");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<int?>("role_id");

                    b.Property<ulong?>("user_id");

                    b.HasKey("claim_master_id");

                    b.HasIndex("role_id");

                    b.HasIndex("user_id");

                    b.ToTable("tbl_user_role_map");
                });

            modelBuilder.Entity("projContext.DB.tbl_working_role", b =>
                {
                    b.Property<int>("working_role_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("company_id");

                    b.Property<int>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<int?>("dept_id");

                    b.Property<byte>("is_active");

                    b.Property<byte>("is_default");

                    b.Property<int>("last_modified_by");

                    b.Property<DateTime>("last_modified_date");

                    b.Property<string>("working_role_name");

                    b.HasKey("working_role_id");

                    b.HasIndex("company_id");

                    b.HasIndex("dept_id");

                    b.ToTable("tbl_working_role");
                });

            modelBuilder.Entity("projContext.DB.log_tbl_salary_input", b =>
                {
                    b.HasOne("projContext.DB.tbl_component_master", "tcm")
                        .WithMany()
                        .HasForeignKey("component_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_approved_emp_separation_cancellation", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "admin_emp")
                        .WithMany()
                        .HasForeignKey("admin_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "app1_emp")
                        .WithMany()
                        .HasForeignKey("approver1_id")
                        .HasConstraintName("FK_tbl_approved_emp_separation_cancellation_tbl_employee_maste~1");

                    b.HasOne("projContext.DB.tbl_employee_master", "app2_emp")
                        .WithMany()
                        .HasForeignKey("approver2_id")
                        .HasConstraintName("FK_tbl_approved_emp_separation_cancellation_tbl_employee_maste~2");

                    b.HasOne("projContext.DB.tbl_employee_master", "app3_emp")
                        .WithMany()
                        .HasForeignKey("apprver3_id")
                        .HasConstraintName("FK_tbl_approved_emp_separation_cancellation_tbl_employee_maste~3");

                    b.HasOne("projContext.DB.tbl_company_master", "emp_sep")
                        .WithMany()
                        .HasForeignKey("fkid_empSepration")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_assets_approval", b =>
                {
                    b.HasOne("projContext.DB.tbl_assets_request_master", "asset_req_mastr")
                        .WithMany()
                        .HasForeignKey("asset_req_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_assets_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_assets_request_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_assets_master", "assets_master")
                        .WithMany("tbl_assets_request_master")
                        .HasForeignKey("assets_master_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "emp_master")
                        .WithMany()
                        .HasForeignKey("req_employee_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_attendace_request", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval1")
                        .WithMany()
                        .HasForeignKey("a1_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval2")
                        .WithMany()
                        .HasForeignKey("a2_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval3")
                        .WithMany()
                        .HasForeignKey("a3_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tem_admin")
                        .WithMany()
                        .HasForeignKey("admin_id");

                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_requester")
                        .WithMany()
                        .HasForeignKey("r_e_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_attendance_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_machine_master", "tbl_machine_master")
                        .WithMany()
                        .HasForeignKey("machine_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_attendance_details_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_attendance_details", "tbl_attendance_details")
                        .WithMany()
                        .HasForeignKey("a_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("e_id");

                    b.HasOne("projContext.DB.tbl_machine_master", "tbl_machine_master")
                        .WithMany()
                        .HasForeignKey("machine_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_attendance_details_manual", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_attendance_summary", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_city", b =>
                {
                    b.HasOne("projContext.DB.tbl_state", "tbl_state")
                        .WithMany()
                        .HasForeignKey("state_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_comb_off_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_comb_off_rule_master", "tbl_comb")
                        .WithMany()
                        .HasForeignKey("comp_off_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_comp_off_ledger", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "deleted_by_detail")
                        .WithMany()
                        .HasForeignKey("deleted_by")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("e_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_comp_off_ledger_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("e_id");

                    b.HasOne("projContext.DB.tbl_comp_off_ledger", "tbl_comp_off_ledger")
                        .WithMany()
                        .HasForeignKey("sno");
                });

            modelBuilder.Entity("projContext.DB.tbl_comp_off_request_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval1")
                        .WithMany()
                        .HasForeignKey("a1_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval2")
                        .WithMany()
                        .HasForeignKey("a2_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval3")
                        .WithMany()
                        .HasForeignKey("a3_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tem_admin")
                        .WithMany()
                        .HasForeignKey("admin_id");

                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_requester")
                        .WithMany()
                        .HasForeignKey("r_e_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_company_emp_setting", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_company_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_city", "tbl_city")
                        .WithMany()
                        .HasForeignKey("city_id");

                    b.HasOne("projContext.DB.tbl_country", "tbl_country")
                        .WithMany()
                        .HasForeignKey("country_id");

                    b.HasOne("projContext.DB.tbl_state", "tbl_state")
                        .WithMany()
                        .HasForeignKey("state_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_compoff_raise", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "approval1_emp")
                        .WithMany()
                        .HasForeignKey("a1_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "approval2_emp")
                        .WithMany()
                        .HasForeignKey("a2_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "approver3_emp")
                        .WithMany()
                        .HasForeignKey("a3_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tem_admin")
                        .WithMany()
                        .HasForeignKey("admin_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "emp_requester")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_component_formula_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_component_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("component_id")
                        .HasConstraintName("FK_tcpd_component_id");

                    b.HasOne("projContext.DB.tbl_salary_group", "salary_group")
                        .WithMany()
                        .HasForeignKey("salary_group_id")
                        .HasConstraintName("FK_tcpd_tsg_salarygroup_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_daily_attendance", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_emp_officaial_sec", "tbl_emp_officaial_sec")
                        .WithMany()
                        .HasForeignKey("emp_offcl_id");

                    b.HasOne("projContext.DB.tbl_holiday_master", "thm")
                        .WithMany()
                        .HasForeignKey("holiday_id");

                    b.HasOne("projContext.DB.tbl_leave_request", "tlr")
                        .WithMany()
                        .HasForeignKey("leave_request_id");

                    b.HasOne("projContext.DB.tbl_shift_details", "tbl_shift_details")
                        .WithMany()
                        .HasForeignKey("s_d_id");

                    b.HasOne("projContext.DB.tbl_shift_master", "tbl_shift_master")
                        .WithMany()
                        .HasForeignKey("shift_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_department_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_department_master_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_department_master", "tbl_department_master")
                        .WithMany()
                        .HasForeignKey("department_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_designation_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_designation_master", "tbl_designation_master")
                        .WithMany()
                        .HasForeignKey("desig_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_document_type_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_adhar_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_attendance_setting", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_bank_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_bank_master", "bank_mstr")
                        .WithMany()
                        .HasForeignKey("bank_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_department_allocation", b =>
                {
                    b.HasOne("projContext.DB.tbl_department_master", "tbl_department_master")
                        .WithMany()
                        .HasForeignKey("department_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("employee_id");

                    b.HasOne("projContext.DB.tbl_sub_department_master", "tbl_sub_department_master")
                        .WithMany()
                        .HasForeignKey("sub_dept_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_desi_allocation", b =>
                {
                    b.HasOne("projContext.DB.tbl_designation_master", "tbl_designation_master")
                        .WithMany()
                        .HasForeignKey("desig_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany("tbl_emp_desi_allocation")
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_documents", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_document_type_master", "doc_master")
                        .WithMany()
                        .HasForeignKey("doc_type_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_employee_master", "emp_master")
                        .WithMany()
                        .HasForeignKey("emp_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_esic_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_family_sec", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany("tbl_emp_family_sec")
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_fnf_asset", b =>
                {
                    b.HasOne("projContext.DB.tbl_fnf_master", "fn_mstr")
                        .WithMany()
                        .HasForeignKey("fnf_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_grade_allocation", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany("tbl_emp_grade_allocation")
                        .HasForeignKey("employee_id");

                    b.HasOne("projContext.DB.tbl_grade_master", "tbl_grade_master")
                        .WithMany()
                        .HasForeignKey("grade_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_location_allocation", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("employee_id");

                    b.HasOne("projContext.DB.tbl_location_master", "tbl_location_master")
                        .WithMany()
                        .HasForeignKey("location_id");

                    b.HasOne("projContext.DB.tbl_sub_location_master", "tbl_sub_location_master")
                        .WithMany()
                        .HasForeignKey("sub_location_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_manager", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany("tbl_emp_manager")
                        .HasForeignKey("employee_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master1")
                        .WithMany()
                        .HasForeignKey("m_one_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_officaial_sec", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany("tbl_emp_officaial_sec")
                        .HasForeignKey("employee_id");

                    b.HasOne("projContext.DB.tbl_religion_master", "tbl_religion_master")
                        .WithMany()
                        .HasForeignKey("religion_id");

                    b.HasOne("projContext.DB.tbl_state", "tbl_state")
                        .WithMany()
                        .HasForeignKey("state_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_pan_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_personal_sec", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany("tbl_emp_personal_sec")
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_pf_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_bank_master", "bank_mstr")
                        .WithMany()
                        .HasForeignKey("bank_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_prev_employement", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_mstr")
                        .WithMany()
                        .HasForeignKey("current_comp_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_employee_master", "emp_mstr")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_qualification_sec", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany("tbl_emp_qualification_sec")
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_salary_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_component_master", "component_master")
                        .WithMany()
                        .HasForeignKey("component_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_separation", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "admin_emp")
                        .WithMany()
                        .HasForeignKey("admin_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "app1_emp")
                        .WithMany()
                        .HasForeignKey("approver1_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "app2_emp")
                        .WithMany()
                        .HasForeignKey("approver2_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "app3_emp")
                        .WithMany()
                        .HasForeignKey("apprver3_id");

                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_employee_master", "emp_mstr")
                        .WithMany()
                        .HasForeignKey("emp_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_shift_allocation", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany("tbl_emp_shift_allocation")
                        .HasForeignKey("employee_id");

                    b.HasOne("projContext.DB.tbl_shift_master", "tbl_shift_master")
                        .WithMany()
                        .HasForeignKey("shift_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_weekoff", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_withdrawal", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_mstr")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "emp_mstr")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_emp_working_role_allocation", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .HasConstraintName("FK_tewp_tem_emp_id");

                    b.HasOne("projContext.DB.tbl_working_role", "tbl_working_role")
                        .WithMany()
                        .HasForeignKey("work_r_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_employee_company_map", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany("tbl_employee_company_map")
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_employee_income_tax_amount", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_emp")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_employeementtype_settings", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_grade_master", "grade_master")
                        .WithMany()
                        .HasForeignKey("grade_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_employment_type_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany("tbl_employment_type_master")
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_cycle_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_fiscal_yr_mstr", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_kpi_criteria_submission", b =>
                {
                    b.HasOne("projContext.DB.tbl_kpi_criteria_master", "tbl_kpi_criteria_master")
                        .WithMany()
                        .HasForeignKey("crit_id")
                        .HasConstraintName("FK_tblepa_critid");

                    b.HasOne("projContext.DB.tbl_epa_kpi_submission", "teks")
                        .WithMany("tbl_epa_kpi_criteria_submissions")
                        .HasForeignKey("kpi_submission_id")
                        .HasConstraintName("FK_tblepa_submissionid");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_kpi_submission", b =>
                {
                    b.HasOne("projContext.DB.tbl_kpi_key_area_master", "tbl_kpi_key_area_master")
                        .WithMany()
                        .HasForeignKey("key_area_id");

                    b.HasOne("projContext.DB.tbl_epa_submission", "tbl_epa_submission")
                        .WithMany("tbl_epa_kpi_submissions")
                        .HasForeignKey("submission_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_kra_submission", b =>
                {
                    b.HasOne("projContext.DB.tbl_kra_master", "tbl_kra_master")
                        .WithMany()
                        .HasForeignKey("kra_id");

                    b.HasOne("projContext.DB.tbl_kpi_rating_master", "tbl_kpi_rating_master")
                        .WithMany()
                        .HasForeignKey("rating_id");

                    b.HasOne("projContext.DB.tbl_epa_submission", "tbl_epa_submission")
                        .WithMany("tbl_epa_kra_submissions")
                        .HasForeignKey("submission_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_question_submission", b =>
                {
                    b.HasOne("projContext.DB.tbl_question_master", "tbl_question_master")
                        .WithMany()
                        .HasForeignKey("question_id");

                    b.HasOne("projContext.DB.tbl_epa_submission", "tbl_epa_submission")
                        .WithMany("tbl_epa_question_submissions")
                        .HasForeignKey("submission_id");

                    b.HasOne("projContext.DB.tbl_tab_master", "tbl_tab_master")
                        .WithMany()
                        .HasForeignKey("tab_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_status_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_epa_submission", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_mstr")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_department_master", "tbl_department_master")
                        .WithMany()
                        .HasForeignKey("department_id");

                    b.HasOne("projContext.DB.tbl_designation_master", "tbl_designation_master")
                        .WithMany()
                        .HasForeignKey("desig_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_emp_officaial_sec", "tbl_emp_officaial_sec")
                        .WithMany()
                        .HasForeignKey("emp_off_id");

                    b.HasOne("projContext.DB.tbl_epa_status_master", "tbl_epa_status_master")
                        .WithMany()
                        .HasForeignKey("epa_current_status");

                    b.HasOne("projContext.DB.tbl_epa_fiscal_yr_mstr", "tbl_epa_fiscal_yr_mstr")
                        .WithMany()
                        .HasForeignKey("fiscal_year_id");

                    b.HasOne("projContext.DB.tbl_working_role", "tbl_w_role")
                        .WithMany()
                        .HasForeignKey("w_r_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_event_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_attendance_dtl", b =>
                {
                    b.HasOne("projContext.DB.tbl_fnf_master", "fnf_mstr")
                        .WithMany()
                        .HasForeignKey("fnf_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_component", b =>
                {
                    b.HasOne("projContext.DB.tbl_component_master", "component_mstr")
                        .WithMany()
                        .HasForeignKey("component_id");

                    b.HasOne("projContext.DB.tbl_fnf_master", "fnf_mstr")
                        .WithMany()
                        .HasForeignKey("fnf_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_leave_encash", b =>
                {
                    b.HasOne("projContext.DB.tbl_fnf_master", "fnf_mstr")
                        .WithMany()
                        .HasForeignKey("fnf_id");

                    b.HasOne("projContext.DB.tbl_leave_type", "leave_type")
                        .WithMany()
                        .HasForeignKey("leave_type_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_loan_recover", b =>
                {
                    b.HasOne("projContext.DB.tbl_loan_request", "loan_req")
                        .WithMany()
                        .HasForeignKey("loan_req_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "emp_mstr")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_emp_separation", "emp_sep_mstr")
                        .WithMany()
                        .HasForeignKey("fkid_empSepration");
                });

            modelBuilder.Entity("projContext.DB.tbl_fnf_reimburesment", b =>
                {
                    b.HasOne("projContext.DB.tbl_fnf_master", "fnf_mstr")
                        .WithMany()
                        .HasForeignKey("fnf_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_grade_master_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_grade_master", "tbl_grade_master")
                        .WithMany()
                        .HasForeignKey("grade_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_health_card_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_emp_master")
                        .WithMany()
                        .HasForeignKey("employee_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_holi_comp_list_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("cid");

                    b.HasOne("projContext.DB.tbl_holiday_master", "tbl_holiday_master")
                        .WithMany()
                        .HasForeignKey("h_id");

                    b.HasOne("projContext.DB.tbl_location_master", "tbl_location_master")
                        .WithMany()
                        .HasForeignKey("l_id");

                    b.HasOne("projContext.DB.tbl_holiday_master_comp_list", "tbl_holiday_master_comp_list")
                        .WithMany()
                        .HasForeignKey("lid");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_master_comp_list", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_holiday_master", "tbl_holiday_master")
                        .WithMany("tbl_holiday_master_comp_list")
                        .HasForeignKey("holiday_id");

                    b.HasOne("projContext.DB.tbl_location_master", "tbl_location_master")
                        .WithMany()
                        .HasForeignKey("location_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_master_emp_list", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("employee_id");

                    b.HasOne("projContext.DB.tbl_holiday_master", "tbl_holiday_master")
                        .WithMany("tbl_holiday_master_emp_list")
                        .HasForeignKey("holiday_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_master_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_holiday_master", "tbl_holiday_master")
                        .WithMany()
                        .HasForeignKey("holiday_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_mstr_rel_list", b =>
                {
                    b.HasOne("projContext.DB.tbl_holiday_master", "tbl_holiday")
                        .WithMany("tbl_holiday_mstr_rel_list")
                        .HasForeignKey("h_id");

                    b.HasOne("projContext.DB.tbl_religion_master", "tbl_religion_master")
                        .WithMany()
                        .HasForeignKey("religion_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_holiday_rel_list_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_holiday_mstr_rel_list", "tbl_holi_rel")
                        .WithMany()
                        .HasForeignKey("h_r_id");

                    b.HasOne("projContext.DB.tbl_holiday_master", "tbl_holiday_master")
                        .WithMany()
                        .HasForeignKey("holiday_id");

                    b.HasOne("projContext.DB.tbl_religion_master", "tbl_religion_master")
                        .WithMany()
                        .HasForeignKey("religion_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_holyd_emp_list_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("employee_id");

                    b.HasOne("projContext.DB.tbl_holiday_master_emp_list", "tbl_hol_emp")
                        .WithMany()
                        .HasForeignKey("h_id");

                    b.HasOne("projContext.DB.tbl_holiday_master", "tbl_holiday_master")
                        .WithMany()
                        .HasForeignKey("holiday_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_kpi_criteria", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_kpi_criteria_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_kpi_key_area_master", "tbl_key_area")
                        .WithMany("tbl_kpi_criteria_master")
                        .HasForeignKey("k_a_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_kpi_key_area_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_kpi_objective_type", "tbl_obj_type")
                        .WithMany()
                        .HasForeignKey("otype_id");

                    b.HasOne("projContext.DB.tbl_working_role", "tbl_w_role")
                        .WithMany()
                        .HasForeignKey("w_r_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_kpi_objective_type", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_kpi_rating_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_kra_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_department_master", "depart_mstr")
                        .WithMany()
                        .HasForeignKey("department_id");

                    b.HasOne("projContext.DB.tbl_working_role", "work_role")
                        .WithMany()
                        .HasForeignKey("wrk_role_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_app_emp_type_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_applicablity", "tbl_leave_applicablity")
                        .WithMany()
                        .HasForeignKey("lid");

                    b.HasOne("projContext.DB.tbl_leave_app_on_emp_type", "tbl_leave_app_on_emp_type")
                        .WithMany()
                        .HasForeignKey("sno");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_app_on_dept", b =>
                {
                    b.HasOne("projContext.DB.tbl_department_master", "d")
                        .WithMany()
                        .HasForeignKey("id");

                    b.HasOne("projContext.DB.tbl_leave_applicablity", "l")
                        .WithMany()
                        .HasForeignKey("lid");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_app_on_emp_type", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_applicablity", "tbl_l_app")
                        .WithMany()
                        .HasForeignKey("l_app_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_appcbl_on_company", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("c_id");

                    b.HasOne("projContext.DB.tbl_leave_applicablity", "tbl_leave_applicablity")
                        .WithMany()
                        .HasForeignKey("l_a_id");

                    b.HasOne("projContext.DB.tbl_location_master", "tbl_location_master")
                        .WithMany()
                        .HasForeignKey("location_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_appcbl_on_dept_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_department_master", "tbl_department_master")
                        .WithMany()
                        .HasForeignKey("d_id");

                    b.HasOne("projContext.DB.tbl_leave_applicablity", "tbl_leave_applicablity")
                        .WithMany()
                        .HasForeignKey("l_a_id");

                    b.HasOne("projContext.DB.tbl_leave_app_on_dept", "tbl_leave_app_on_dept")
                        .WithMany()
                        .HasForeignKey("sno");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_appcbl_on_religion", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_applicablity", "tbl_leave_applicablity")
                        .WithMany()
                        .HasForeignKey("l_app_id");

                    b.HasOne("projContext.DB.tbl_religion_master", "tbl_religion_master")
                        .WithMany()
                        .HasForeignKey("religion_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_appcbl_rel_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_applicablity", "tbl_leave_applicablity")
                        .WithMany()
                        .HasForeignKey("lid");

                    b.HasOne("projContext.DB.tbl_religion_master", "tbl_religion_master")
                        .WithMany()
                        .HasForeignKey("r_id");

                    b.HasOne("projContext.DB.tbl_leave_appcbl_on_religion", "tbl_leave_appcbl_on_religion")
                        .WithMany()
                        .HasForeignKey("sno");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_appcbly_on_comp_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("c_id");

                    b.HasOne("projContext.DB.tbl_leave_applicablity", "tbl_leave_applicablity")
                        .WithMany()
                        .HasForeignKey("l_a_id");

                    b.HasOne("projContext.DB.tbl_location_master", "tbl_location_master")
                        .WithMany()
                        .HasForeignKey("l_id");

                    b.HasOne("projContext.DB.tbl_leave_appcbl_on_company", "tbl_leave_appcbl_on_company")
                        .WithMany()
                        .HasForeignKey("sno");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_applicablity", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_applicablity_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_applicablity", "tbl_lev_app")
                        .WithMany()
                        .HasForeignKey("l_app_id");

                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_cashable", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_cashable_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_cashable", "tbl_leave_cashable")
                        .WithMany()
                        .HasForeignKey("leave_cashable_id");

                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_credit", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_credit_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_credit", "tbl_leave_credit")
                        .WithMany()
                        .HasForeignKey("leave_credit_id");

                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_info", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_type", "tbl_leave_type")
                        .WithMany()
                        .HasForeignKey("leave_type_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_info_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");

                    b.HasOne("projContext.DB.tbl_leave_type", "tbl_leave_type")
                        .WithMany()
                        .HasForeignKey("leave_type_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_ledger", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("e_id");

                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");

                    b.HasOne("projContext.DB.tbl_leave_type", "tbl_leave_type")
                        .WithMany()
                        .HasForeignKey("leave_type_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_ledger_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("e_id");

                    b.HasOne("projContext.DB.tbl_leave_type", "tbl_leave_type")
                        .WithMany()
                        .HasForeignKey("leave_type_id");

                    b.HasOne("projContext.DB.tbl_leave_ledger", "tbl_leave_ledger")
                        .WithMany()
                        .HasForeignKey("sno");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_request", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval1")
                        .WithMany()
                        .HasForeignKey("a1_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval2")
                        .WithMany()
                        .HasForeignKey("a2_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval3")
                        .WithMany()
                        .HasForeignKey("a3_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tem_admin")
                        .WithMany()
                        .HasForeignKey("admin_id");

                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");

                    b.HasOne("projContext.DB.tbl_leave_type", "tbl_leave_type")
                        .WithMany()
                        .HasForeignKey("leave_type_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_requester")
                        .WithMany()
                        .HasForeignKey("r_e_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_rule", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_rule_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_rule", "tbl_leave_rule")
                        .WithMany()
                        .HasForeignKey("leave_credit_id");

                    b.HasOne("projContext.DB.tbl_leave_info", "tbl_leave_info")
                        .WithMany()
                        .HasForeignKey("leave_info_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_leave_type_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_leave_type", "tbl_leave_type")
                        .WithMany()
                        .HasForeignKey("leave_type_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_loan_approval", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_loan_request", "tbl_loan_request")
                        .WithMany()
                        .HasForeignKey("loan_req_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_loan_approval_setting", b =>
                {
                    b.HasOne("projContext.DB.tbl_role_master", "role_master")
                        .WithMany()
                        .HasForeignKey("approver_role_id");

                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_loan_repayments", b =>
                {
                    b.HasOne("projContext.DB.tbl_loan_request", "tbl_loan_req")
                        .WithMany()
                        .HasForeignKey("loan_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_emp")
                        .WithMany()
                        .HasForeignKey("req_emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_loan_request", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "emp_master")
                        .WithMany()
                        .HasForeignKey("req_emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_location_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_city", "tbl_city")
                        .WithMany()
                        .HasForeignKey("city_id");

                    b.HasOne("projContext.DB.tbl_country", "tbl_country")
                        .WithMany()
                        .HasForeignKey("country_id");

                    b.HasOne("projContext.DB.tbl_state", "tbl_state")
                        .WithMany()
                        .HasForeignKey("state_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_location_master_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_city", "tbl_city")
                        .WithMany()
                        .HasForeignKey("city_id");

                    b.HasOne("projContext.DB.tbl_country", "tbl_country")
                        .WithMany()
                        .HasForeignKey("country_id");

                    b.HasOne("projContext.DB.tbl_location_master", "tbl_location_master")
                        .WithMany()
                        .HasForeignKey("location_id");

                    b.HasOne("projContext.DB.tbl_state", "tbl_state")
                        .WithMany()
                        .HasForeignKey("state_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_machine_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_location_master", "tbl_location_master")
                        .WithMany()
                        .HasForeignKey("location_id");

                    b.HasOne("projContext.DB.tbl_sub_location_master", "tbl_sub_location_master")
                        .WithMany()
                        .HasForeignKey("sub_location_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_machine_master_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_machine_master", "tbl_machine_master")
                        .WithMany()
                        .HasForeignKey("machine_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form1", b =>
                {
                    b.HasOne("projContext.DB.tbl_component_master", "amt_component_mstr")
                        .WithMany()
                        .HasForeignKey("amt_c_id");

                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("comp_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_component_master", "d_component_mstr")
                        .WithMany()
                        .HasForeignKey("date_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "re_component_mstr")
                        .WithMany()
                        .HasForeignKey("date_realised_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "n_component_mstr")
                        .WithMany()
                        .HasForeignKey("nature_and_date_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "r_component_mstr")
                        .WithMany()
                        .HasForeignKey("rate_of_wages_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "rm_component_mstr")
                        .WithMany()
                        .HasForeignKey("remarks_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "w_component_mstr")
                        .WithMany()
                        .HasForeignKey("whether_workman_c_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form10", b =>
                {
                    b.HasOne("projContext.DB.tbl_component_master", "mb_component_mstr")
                        .WithMany()
                        .HasForeignKey("basic_min_rate_pay_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_mb");

                    b.HasOne("projContext.DB.tbl_component_master", "ab_component_mstr")
                        .WithMany()
                        .HasForeignKey("basic_wages_actually_pay_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_ab");

                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("comp_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_component_master", "mda_component_mstr")
                        .WithMany()
                        .HasForeignKey("da_min_rate_pay_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_mda");

                    b.HasOne("projContext.DB.tbl_component_master", "ada_component_mstr")
                        .WithMany()
                        .HasForeignKey("da_wages_actually_pay_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_ada");

                    b.HasOne("projContext.DB.tbl_component_master", "dop_component_mstr")
                        .WithMany()
                        .HasForeignKey("date_ofpayment_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_dop");

                    b.HasOne("projContext.DB.tbl_component_master", "epf_component_mstr")
                        .WithMany()
                        .HasForeignKey("employers_pf_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_epf");

                    b.HasOne("projContext.DB.tbl_component_master", "gw_component_mstr")
                        .WithMany()
                        .HasForeignKey("gross_wages_pay_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_gw");

                    b.HasOne("projContext.DB.tbl_component_master", "hrd_component_mstr")
                        .WithMany()
                        .HasForeignKey("hr_deduction_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_hrd");

                    b.HasOne("projContext.DB.tbl_component_master", "od_component_mstr")
                        .WithMany()
                        .HasForeignKey("other_deduction_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_od");

                    b.HasOne("projContext.DB.tbl_component_master", "ow_component_mstr")
                        .WithMany()
                        .HasForeignKey("overtime_worked_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_ow");

                    b.HasOne("projContext.DB.tbl_component_master", "ta_component_mstr")
                        .WithMany()
                        .HasForeignKey("total_attan_orunit_ofworkdone_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_ta");

                    b.HasOne("projContext.DB.tbl_component_master", "td_component_mstr")
                        .WithMany()
                        .HasForeignKey("total_deduction_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_td");

                    b.HasOne("projContext.DB.tbl_component_master", "wp_component_mstr")
                        .WithMany()
                        .HasForeignKey("wages_paid_c_id")
                        .HasConstraintName("FK_tblmst_tcpd_wp");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form10_data", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_emp")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form11", b =>
                {
                    b.HasOne("projContext.DB.tbl_component_master", "bwp_component_mstr")
                        .WithMany()
                        .HasForeignKey("basic_wages_pay_c_id");

                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("comp_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_component_master", "dawp_component_mstr")
                        .WithMany()
                        .HasForeignKey("da_wages_pay_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "gw_component_mstr")
                        .WithMany()
                        .HasForeignKey("gross_wages_pay_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "nw_component_mstr")
                        .WithMany()
                        .HasForeignKey("net_wages_pay_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "ow_component_mstr")
                        .WithMany()
                        .HasForeignKey("overtime_wages_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "pinch_component_mstr")
                        .WithMany()
                        .HasForeignKey("pay_incharge_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "ta_component_mstr")
                        .WithMany()
                        .HasForeignKey("total_attand_orwork_done_c_id")
                        .HasConstraintName("FK_tblmst11_tcpd_ta");

                    b.HasOne("projContext.DB.tbl_component_master", "td_component_mstr")
                        .WithMany()
                        .HasForeignKey("total_deduction_c_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form11_data", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_emp")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form1_data", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_emp")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form2", b =>
                {
                    b.HasOne("projContext.DB.tbl_component_master", "amt_component_mstr")
                        .WithMany()
                        .HasForeignKey("amt_ofdeduc_c_id");

                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("comp_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_component_master", "dmg_component_mstr")
                        .WithMany()
                        .HasForeignKey("damage_orloss_and_date_c_id")
                        .HasConstraintName("FK_tblmst2_tcpd_dmg");

                    b.HasOne("projContext.DB.tbl_component_master", "d_component_mstr")
                        .WithMany()
                        .HasForeignKey("date_ofdeduc_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "re_component_mstr")
                        .WithMany()
                        .HasForeignKey("date_realised_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "in_component_mstr")
                        .WithMany()
                        .HasForeignKey("no_of_installment_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "rm_component_mstr")
                        .WithMany()
                        .HasForeignKey("remarks_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "w_component_mstr")
                        .WithMany()
                        .HasForeignKey("whether_workman_c_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form2_data", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_emp")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form3", b =>
                {
                    b.HasOne("projContext.DB.tbl_component_master", "aa_component_mstr")
                        .WithMany()
                        .HasForeignKey("advance_amt_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "ad_component_mstr")
                        .WithMany()
                        .HasForeignKey("advance_date_c_id");

                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("comp_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_component_master", "re_component_mstr")
                        .WithMany()
                        .HasForeignKey("date_total_repaid_c_id")
                        .HasConstraintName("FK_tblmst3_tcpd_re");

                    b.HasOne("projContext.DB.tbl_component_master", "in_component_mstr")
                        .WithMany()
                        .HasForeignKey("no_of_installment_c_id")
                        .HasConstraintName("FK_tblmst3_tcpd_in");

                    b.HasOne("projContext.DB.tbl_component_master", "pg_component_mstr")
                        .WithMany()
                        .HasForeignKey("postponement_granted_c_id")
                        .HasConstraintName("FK_tblmst3_tcpd_pg");

                    b.HasOne("projContext.DB.tbl_component_master", "p_component_mstr")
                        .WithMany()
                        .HasForeignKey("purpose_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "rm_component_mstr")
                        .WithMany()
                        .HasForeignKey("remarks_c_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form3_data", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_emp")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form4", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("comp_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_component_master", "dop_component_mstr")
                        .WithMany()
                        .HasForeignKey("dop_component_mstrcomponent_id")
                        .HasConstraintName("FK_tblmst4_tcpd_dop");

                    b.HasOne("projContext.DB.tbl_component_master", "eo_component_mstr")
                        .WithMany()
                        .HasForeignKey("extent_overtime_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "ne_component_mstr")
                        .WithMany()
                        .HasForeignKey("normal_earning_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "hr_component_mstr")
                        .WithMany()
                        .HasForeignKey("normal_hr_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "r_component_mstr")
                        .WithMany()
                        .HasForeignKey("normal_rate_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "d_component_mstr")
                        .WithMany()
                        .HasForeignKey("overtime_date_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "oe_component_mstr")
                        .WithMany()
                        .HasForeignKey("overtime_earning_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "or_component_mstr")
                        .WithMany()
                        .HasForeignKey("overtime_rate_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "te_component_mstr")
                        .WithMany()
                        .HasForeignKey("total_earning_c_id");

                    b.HasOne("projContext.DB.tbl_component_master", "to_component_mstr")
                        .WithMany()
                        .HasForeignKey("total_overtime_c_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_muster_form4_data", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_emp")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_ot_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_ot_rate_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_grade_master", "grade_master")
                        .WithMany()
                        .HasForeignKey("grade_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_ot_rule_master_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_ot_rule_master", "tbl_ot_rule_master")
                        .WithMany()
                        .HasForeignKey("ot_rule_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_outdoor_request", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval1")
                        .WithMany()
                        .HasForeignKey("a1_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval2")
                        .WithMany()
                        .HasForeignKey("a2_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_approval3")
                        .WithMany()
                        .HasForeignKey("a3_e_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tem_admin")
                        .WithMany()
                        .HasForeignKey("admin_id");

                    b.HasOne("projContext.DB.tbl_company_master", "comp_mster")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_requester")
                        .WithMany()
                        .HasForeignKey("r_e_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_pay_set_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_payroll_month_setting", "tbl_payroll_month_setting")
                        .WithMany()
                        .HasForeignKey("pay_set_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_payroll_process_status", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_emp")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_question_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_mstr")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_tab_master", "tab_mstr")
                        .WithMany()
                        .HasForeignKey("tab_id");

                    b.HasOne("projContext.DB.tbl_working_role", "wrk_role")
                        .WithMany()
                        .HasForeignKey("wrk_role_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_religion_master_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_religion_master", "tbl_religion_master")
                        .WithMany()
                        .HasForeignKey("religion_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_right_menu_link", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_rimb_cat_lmt_mstr", b =>
                {
                    b.HasOne("projContext.DB.tbl_remimb_cat_mstr", "trcm")
                        .WithMany()
                        .HasForeignKey("rcm_id");

                    b.HasOne("projContext.DB.tbl_rimb_grd_lmt_mstr", "trglm")
                        .WithMany()
                        .HasForeignKey("rglm_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_rimb_grd_lmt_mstr", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_grade_master", "tgm")
                        .WithMany()
                        .HasForeignKey("grade_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_rimb_req_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_rimb_cat_lmt_mstr", "trclm")
                        .WithMany()
                        .HasForeignKey("rclm_id");

                    b.HasOne("projContext.DB.tbl_rimb_req_mstr", "trrm")
                        .WithMany()
                        .HasForeignKey("rrm_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_rimb_req_mstr", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_role_claim_map", b =>
                {
                    b.HasOne("projContext.DB.tbl_role_master", "tbl_role_master")
                        .WithMany()
                        .HasForeignKey("role_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_rpt_title_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_component_master", "tbl_Component_Master")
                        .WithMany()
                        .HasForeignKey("component_id");

                    b.HasOne("projContext.DB.tbl_report_master", "tbl_report_master")
                        .WithMany()
                        .HasForeignKey("rpt_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_salary_group", b =>
                {
                    b.HasOne("projContext.DB.tbl_grade_master", "tgm")
                        .WithMany()
                        .HasForeignKey("grade_Id");
                });

            modelBuilder.Entity("projContext.DB.tbl_salary_input", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_component_master", "tcm")
                        .WithMany()
                        .HasForeignKey("component_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_salary_input_change", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_component_master", "tcm")
                        .WithMany()
                        .HasForeignKey("component_id");

                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany()
                        .HasForeignKey("emp_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_scheduler_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_scheduler_master", "tbl_scheduler_master")
                        .WithMany()
                        .HasForeignKey("scheduler_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_sg_maping", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tem")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_salary_group", "tsg")
                        .WithMany()
                        .HasForeignKey("salary_group_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_department", b =>
                {
                    b.HasOne("projContext.DB.tbl_department_master", "tbl_department_master")
                        .WithMany()
                        .HasForeignKey("dept_id");

                    b.HasOne("projContext.DB.tbl_shift_details", "tbl_shift_details")
                        .WithMany()
                        .HasForeignKey("shift_detail_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_details", b =>
                {
                    b.HasOne("projContext.DB.tbl_shift_master", "tbl_shift_master")
                        .WithMany("tbl_shift_details")
                        .HasForeignKey("shift_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_location", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_location_master", "tbl_location_master")
                        .WithMany()
                        .HasForeignKey("location_id");

                    b.HasOne("projContext.DB.tbl_shift_details", "tbl_shift_details")
                        .WithMany()
                        .HasForeignKey("shift_detail_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_master_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_location_master", "tbl_location_master")
                        .WithMany()
                        .HasForeignKey("location_id");

                    b.HasOne("projContext.DB.tbl_shift_master", "tbl_shift_master")
                        .WithMany()
                        .HasForeignKey("shift_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_roster_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_shift_master", "tsm1")
                        .WithMany()
                        .HasForeignKey("shft_id1");

                    b.HasOne("projContext.DB.tbl_shift_master", "tsm2")
                        .WithMany()
                        .HasForeignKey("shft_id2");

                    b.HasOne("projContext.DB.tbl_shift_master", "tsm3")
                        .WithMany()
                        .HasForeignKey("shft_id3");

                    b.HasOne("projContext.DB.tbl_shift_master", "tsm4")
                        .WithMany()
                        .HasForeignKey("shft_id4");

                    b.HasOne("projContext.DB.tbl_shift_master", "tsm5")
                        .WithMany()
                        .HasForeignKey("shft_id5");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_roster_master_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_shift_roster_master", "tbl_shift_roster_master")
                        .WithMany()
                        .HasForeignKey("r_id");

                    b.HasOne("projContext.DB.tbl_shift_details", "tbl_shift_master1")
                        .WithMany()
                        .HasForeignKey("shift_id1");

                    b.HasOne("projContext.DB.tbl_shift_details", "tbl_shift_master2")
                        .WithMany()
                        .HasForeignKey("shift_id2");

                    b.HasOne("projContext.DB.tbl_shift_details", "tbl_shift_master3")
                        .WithMany()
                        .HasForeignKey("shift_id3");

                    b.HasOne("projContext.DB.tbl_shift_details", "tbl_shift_master4")
                        .WithMany()
                        .HasForeignKey("shift_id4");

                    b.HasOne("projContext.DB.tbl_shift_details", "tbl_shift_master5")
                        .WithMany()
                        .HasForeignKey("shift_id5");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_week_off", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_emp_weekoff", "tbl_emp_weekoff")
                        .WithMany()
                        .HasForeignKey("emp_weekoff_id");

                    b.HasOne("projContext.DB.tbl_shift_details", "tbl_shift_details")
                        .WithMany()
                        .HasForeignKey("shift_detail_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_shift_week_off_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_master")
                        .WithMany()
                        .HasForeignKey("emp_id");

                    b.HasOne("projContext.DB.tbl_shift_master", "tbl_shift_master")
                        .WithMany()
                        .HasForeignKey("shift_id");

                    b.HasOne("projContext.DB.tbl_shift_week_off", "tbl_shift_week_off")
                        .WithMany()
                        .HasForeignKey("shift_week_off_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_state", b =>
                {
                    b.HasOne("projContext.DB.tbl_country", "tbl_country")
                        .WithMany()
                        .HasForeignKey("country_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_status_flow_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_epa_status_master", "next_status")
                        .WithMany()
                        .HasForeignKey("next_status_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("projContext.DB.tbl_epa_status_master", "status_master")
                        .WithMany()
                        .HasForeignKey("start_status_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("projContext.DB.tbl_sub_department_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_department_master", "tbl_department_master")
                        .WithMany()
                        .HasForeignKey("department_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_sub_department_master_log", b =>
                {
                    b.HasOne("projContext.DB.tbl_department_master", "tbl_department_master")
                        .WithMany()
                        .HasForeignKey("d_id");

                    b.HasOne("projContext.DB.tbl_sub_department_master", "tbl_sub_department_master")
                        .WithMany()
                        .HasForeignKey("sid");
                });

            modelBuilder.Entity("projContext.DB.tbl_sub_location_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_location_master", "tbl_location_master")
                        .WithMany()
                        .HasForeignKey("location_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_tab_master", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "comp_master")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_tax_slab_Details", b =>
                {
                    b.HasOne("projContext.DB.tbl_tax_slab_master", "ttsm")
                        .WithMany()
                        .HasForeignKey("tax_slab_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_user_master", b =>
                {
                    b.HasOne("projContext.DB.tblCustomerOrganisation", "tblCustomerOrganisation")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("projContext.DB.MLM.tblDistributorMaster", "tblDistributorMaster")
                        .WithMany()
                        .HasForeignKey("DistributorId");

                    b.HasOne("projContext.DB.tbl_employee_master", "tbl_employee_id_details")
                        .WithMany()
                        .HasForeignKey("employee_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_user_role_map", b =>
                {
                    b.HasOne("projContext.DB.tbl_role_master", "tbl_role_master")
                        .WithMany()
                        .HasForeignKey("role_id");

                    b.HasOne("projContext.DB.tbl_user_master", "tbl_user_master")
                        .WithMany()
                        .HasForeignKey("user_id");
                });

            modelBuilder.Entity("projContext.DB.tbl_working_role", b =>
                {
                    b.HasOne("projContext.DB.tbl_company_master", "tbl_company_master")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("projContext.DB.tbl_department_master", "tbl_dept_master")
                        .WithMany()
                        .HasForeignKey("dept_id");
                });
#pragma warning restore 612, 618
        }
    }
}
