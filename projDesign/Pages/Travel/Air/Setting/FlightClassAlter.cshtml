@page
@{
    ViewData["PageId"] = "200105";
    ViewData["Title"] = "Provider Priority";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}


    <div class="col-xl-12">
        <div class="panel">
            <div class="card">
                <div class="card-body p-2">
                    <form id="frmOrganisation" method="post" action="">                        
                        <div class="form-container master-panel">
                            <div class="col-md-12">
                                <h4> @ViewBag.Title </h4>
                                <hr />
                            </div>
                            <div class="row mb-2">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-form-label col-md-3" for="ddlCabinClass">Cabin Class</label>
                                        <div class="col-md-9">
                                            <select id="ddlCabinClass" name="ddlCabinClass" class="form-control" autofocus required>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group" for="txtIdentifier">
                                        <label class="col-form-label col-md-3" for="txtIdentifier">Identifier</label>
                                        <div class="col-md-9">
                                            <input type="text" id="txtIdentifier" name="txtIdentifier"
                                                   maxlength="256" autocomplete="off"
                                                   class="form-control" required>
                                        </div>
                                    </div>
                                </div>
                            </div>

                           


                            <div class="row mb-2">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-form-label col-md-3" for="ddlClassOfBooking">Fare Code</label>
                                        <div class="col-md-9">
                                            <select id="ddlClassOfBooking" name="ddlClassOfBooking" class="form-control" required>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group" for="txtRemarks">
                                        <label class="col-form-label col-md-3" for="txtRemarks">Remarks</label>
                                        <div class="col-md-9">
                                            <input type="text" id="txtRemarks" name="txtRemarks"
                                                   maxlength="256" autocomplete="off"
                                                   class="form-control" required>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="clearfix"></div>
                            <div class="col-md-12">
                                <div class="form-group text-center">
                                    <input type="submit" class="btn btn-primary btn-lg" value="Save">
                                    <input type="reset" id="clearform" class="btn btn-primary btn-lg" value="Reset">
                                    <a href="FlightClassAlterReport" class="btn btn-primary btn-lg">Report</a>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <hr />
                            </div>
                            <div class="clearfix"></div>

                        </div>
                        
                    </form>
                    
                </div>
            </div>
        </div>
    </div>

@section Scripts {
    
    <script type="text/javascript">

        

        $(document).ready(function () {
            
            let OrgId = localStorage.getItem("currentOrganisation");
            let token = localStorage.getItem('token');
            let headerss = new Headers();
            headerss.append("Authorization", 'Bearer ' + token);
            headerss.append("Content-Type", "application/json; charset=utf-8");
            headerss.append("OrgId", OrgId);
            BindEnums("ddlProvider", enmServiceProvider, "");
            $("#frmOrganisation").validate({
                onkeyup: false,
                errorPlacement: function (error, element) {
                    if (element.hasClass('select2') && element.next('.select2-container').length) {
                        error.insertAfter(element.next('.select2-container'));
                    }
                    else {
                        error.insertAfter(element);
                    }
                },
                submitHandler: function (form, event) {
                    event.preventDefault();
                    $('#loader').show();                    
                    let Postapiurl = localStorage.getItem('baseUrl') + "air/settings/setServiceProviderPriority"
                    let Postheaderss = new Headers();
                    Postheaderss.append("Authorization", 'Bearer ' + token);
                    Postheaderss.append("OrgId", OrgId);
                    Postheaderss.append("Content-Type", "application/json; charset=utf-8");
                    

                    var formdata = JSON.stringify({
                        "ServiceProvider": $("#ddlProvider").val(),
                        "ModifyRemarks": $("#txtRemarks").val(),
                        "EffectiveFromDate": $("#txtEffectiveFromDt").val(),
                        "priority": $("#ddlPriority").val(),
                    });
                    
                    fetch(Postapiurl, {
                        method: "POST",
                        headers: Postheaderss,
                        body: formdata,                        
                        redirect: 'follow'
                        
                    }).then(response => {
                        if (response.ok) {
                            return response.json();
                        } else {
                            throw new Error(response.statusText);
                        }
                    }).then(data => {

                        if (data.messageType == 1) {                            
                            $('#loader').hide();
                            messageBox("success", "Save successfully");
                            
                        }
                        else {
                            $('#loader').hide();
                            messageBox("error", data.message);
                        }
                    }).catch((error) => {
                        $('#loader').hide();
                        messageBox("error", error.message);
                    });
                    
                }
            });
            $('#clearform').on('click', function () {
                var form = $("#frmOrganisation");
                form.validate().resetForm();  // clear out the validation errors
                form[0].reset();                  // clear out the form data
            });

        });


        function LoadPriority() {
            $('#loader').show();            
            let OrgId = localStorage.getItem("currentOrganisation");
            let token = localStorage.getItem('token');
            let headerss = new Headers();
            headerss.append("Authorization", 'Bearer ' + token);
            headerss.append("Content-Type", "application/json; charset=utf-8");
            headerss.append("OrgId", OrgId);            
            let apiurl = localStorage.getItem('baseUrl') + "/Air/settings/getServiceProvidersPriority?IsDateFitlter=false&ServiceProvider=0" ;
            fetch(apiurl, {
                method: "GET",
                headers: headerss,
            }).then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    throw new Error(response.statusText);
                }
            }).then(data => {
                if (data.messageType == 1) {
                    var dt = $("#dt_table1").DataTable({
                        "processing": true, // for show progress bar
                        "serverSide": false, // for process server side
                        responsive: true,
                        "bDestroy": true,
                        "filter": true, // this is for disable filter (search box)
                        "orderMulti": false, // for disable multiple column at once
                        "scrollX": 200,
                        "aaData": data.returnId,
                        "columnDefs":
                            [

                                {
                                    targets: [1, 5],
                                    render: function (data, type, row) {
                                        var date = new Date(data);
                                        return GetDateFormatddMMyyyyHHtt(date);
                                    }
                                },
                                {
                                    targets: [6],
                                    "class": "text-center",
                                    render: function (data, type, row) {
                                        return `<a class="dropdown-item" href="#"  data-delete-id="${data}" onClick=fncDeleteGridData(this) > <i class="fa fa-trash-alt"></i> Delete</a>`;
                                    }

                                }
                            ],
                        "columns": [
                            { "data": "serviceProvider", "name": "ServiceProvider", "autoWidth": true },
                            { "data": "effectiveFromDate", "name": "effectiveFromDate", "autoWidth": true },
                            { "data": "priority", "name": "priority", "autoWidth": true },
                            { "data": "modifyRemarks", "name": "modifyRemarks", "autoWidth": true },
                            { "data": "modifiedByName", "name": "modifiedByName", "autoWidth": true },
                            { "data": "modifiedDt", "name": "modifiedDt", "autoWidth": true },
                            { "data": "id", "name": "id", "autoWidth": true }
                        ],
                        "lengthMenu": [[5, 10, 50, -1], [5, 10, 50, "All"]],
                        'createdRow': function (row, data, dataIndex) {
                            $('td:eq(3)', row).css('min-width', '200px');
                        }
                    });

                    $('#loader').hide();
                }
                else {
                    $('#loader').hide();
                    messageBox("error", data.message);
                }
            }).catch((error) => {
                $('#loader').hide();
                messageBox("error", error.message);
            });

        }


        function fncDeleteGridData(e) {
            let OrgId = localStorage.getItem("currentOrganisation");
            let token = localStorage.getItem('token');
            let headerss = new Headers();
            headerss.append("Authorization", 'Bearer ' + token);
            headerss.append("Content-Type", "application/json; charset=utf-8");
            headerss.append("OrgId", OrgId);
            msgBoxImagePath = "/js/msgbox/images/";
            $.msgBox({
                title: "Remarks",
                content: "Please enter the remarks",
                type: "prompt",
                buttons: [{ value: "OK" }, { value: "Cancel" }],
                inputs: [{ type: "text", name: "txtDeletedRemarks", header: "Remarks", maxlength: 255 }],
                success: function (result) {
                    if (result == "OK") {
                        let remarks=$('input[name=txtDeletedRemarks]').val();
                        if (remarks !== undefined) {
                            $('#loader').show();
                            let Postapiurl = localStorage.getItem('baseUrl') + "air/settings/DeleteServiceProviderPriority"
                            let Postheaderss = new Headers();
                            Postheaderss.append("Authorization", 'Bearer ' + localStorage.getItem('token'));
                            Postheaderss.append("OrgId", localStorage.getItem('currentOrganisation'));
                            Postheaderss.append("Content-Type", "application/json; charset=utf-8");
                            var formdata = JSON.stringify({
                                "Id": e.getAttribute("data-delete-id"),
                                "ModifyRemarks": remarks,
                            });
                            fetch(Postapiurl, {
                                method: "POST",
                                headers: Postheaderss,
                                body: formdata,                                
                                redirect: 'follow'

                            }).then(response => {
                                if (response.ok) {
                                    return response.json();
                                } else {
                                    throw new Error(response.statusText);
                                }
                            }).then(data => {

                                if (data.messageType == 1) {
                                    $('#loader').hide();
                                    messageBox("success", "Deleted successfully");
                                    $("#ddlProvider").trigger('change');

                                }
                                else {
                                    $('#loader').hide();
                                    messageBox("error", data.message);
                                }
                            }).catch((error) => {
                                $('#loader').hide();
                                messageBox("error", error.message);
                            });
                        }
                        
                    }
                    return false;
                }
            });

            
        }

    </script>
}
        

